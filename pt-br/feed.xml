<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://george-gca.github.io/pt-br/feed.xml" rel="self" type="application/atom+xml"/><link href="https://george-gca.github.io/pt-br/" rel="alternate" type="text/html"/><updated>2024-05-17T01:11:15+00:00</updated><id>https://george-gca.github.io/feed.xml</id><title type="html">blank</title><entry><title type="html">sli.dev para desenvolvedores não web</title><link href="https://george-gca.github.io/pt-br/blog/2023/slidev_for_non_web_devs/" rel="alternate" type="text/html" title="sli.dev para desenvolvedores não web"/><published>2023-06-01T17:19:10+00:00</published><updated>2023-06-01T17:19:10+00:00</updated><id>https://george-gca.github.io/blog/2023/slidev_for_non_web_devs</id><content type="html" xml:base="https://george-gca.github.io/blog/2023/slidev_for_non_web_devs/"><![CDATA[<p>Eu sempre tive dificuldades sempre que tinha que fazer uma nova apresentação. Não me interpretem mal, o Google Slides é bom e é suficiente para a maioria dos casos de uso mais comuns. O problema é quando os slides estão sempre mudando e você quer fazer um controle de versão neles. No passado, fiz alguns slides usando LaTeX com a classe Beamer. Um amigo até me mostrou um <a href="https://github.com/deuslirio/UFGTeX-Presentation">modelo mais bonito</a> do que os predefinidos. O problema é que, embora esta solução seja portátil (pode gerar um documento PDF), não tem algumas funcionalidades que eu queria, como animações, transições e suporte para desenho.</p> <p>Analisei o <a href="https://revealjs.com/">Reveal.js</a>, mas era muito trabalhoso para configurar e manter. Também considerei o <a href="https://remarkjs.com/">Remark</a>, mas a <a href="https://github.com/gnab/remark">última atualização</a> foi há mais de 2 anos. Foi então que encontrei o <a href="https://sli.dev/">sli.dev</a>. É uma ferramenta <a href="https://github.com/slidevjs/slidev">em constante desenvolvimento</a> para criar slides usando <a href="https://sli.dev/guide/syntax.html">Markdown</a>. É baseado em muitas tecnologias web, mas você não precisa ser fluente nelas para usá-lo. Aqui está tudo o que precisa para começar.</p> <h2 id="instalando-o-gerenciador-de-versões-do-node-nvm">Instalando o gerenciador de versões do node (nvm)</h2> <p>O <a href="https://github.com/nvm-sh/nvm">nvm</a> lhe permite rapidamente instalar e usar diferentes versões do node através da linha de comando. Para instalar a versão mais recente, execute o seguinte comando:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>get_latest_github_raw_no_v<span class="o">()</span> <span class="o">{</span>
  <span class="c"># use quando a URL para o download não tiver uma versão incluída no nome do arquivo</span>
  <span class="c"># por exemplo: https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh</span>
  <span class="c"># forma de usar: get_latest_github_raw_no_v "user/repo" "filename"</span>
  <span class="nv">version</span><span class="o">=</span><span class="si">$(</span>curl <span class="nt">--silent</span> <span class="s2">"https://api.github.com/repos/</span><span class="nv">$1</span><span class="s2">/releases/latest"</span> |  <span class="c"># Obtém a versão mais recente da API do GitHub</span>
    <span class="nb">grep</span> <span class="s1">'"tag_name":'</span> |                                             <span class="c"># Pega a linha da tag</span>
    <span class="nb">sed</span> <span class="nt">-E</span> <span class="s1">'s/.*"([^"]+)".*/\1/'</span><span class="si">)</span>                                    <span class="c"># Extrai o valor do JSON</span>
  <span class="nb">echo</span> <span class="s2">"https://raw.githubusercontent.com/</span><span class="nv">$1</span><span class="s2">/</span><span class="nv">$version</span><span class="s2">/"</span><span class="nv">$2</span>
<span class="o">}</span>

<span class="c"># Instala o node version manager (nvm)</span>
<span class="nv">site</span><span class="o">=</span><span class="si">$(</span>get_latest_github_raw_no_v <span class="s2">"nvm-sh/nvm"</span> <span class="s2">"install.sh"</span><span class="si">)</span>
curl <span class="nt">-o-</span> <span class="nv">$site</span> | bash
</code></pre></div></div> <p>Depois, adicione as seguintes linhas ao seu <code class="language-plaintext highlighter-rouge">~/.bashrc</code>:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># habilita o node version manager</span>
<span class="k">if</span> <span class="o">[</span> <span class="nt">-d</span> <span class="s2">"</span><span class="nv">$HOME</span><span class="s2">/.nvm"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then
    </span><span class="nb">export </span><span class="nv">NVM_DIR</span><span class="o">=</span><span class="s2">"</span><span class="nv">$HOME</span><span class="s2">/.nvm"</span>
    <span class="o">[</span> <span class="nt">-s</span> <span class="s2">"</span><span class="nv">$NVM_DIR</span><span class="s2">/nvm.sh"</span> <span class="o">]</span> <span class="o">&amp;&amp;</span> <span class="se">\.</span> <span class="s2">"</span><span class="nv">$NVM_DIR</span><span class="s2">/nvm.sh"</span>  <span class="c"># Carrega o nvm</span>
    <span class="o">[</span> <span class="nt">-s</span> <span class="s2">"</span><span class="nv">$NVM_DIR</span><span class="s2">/bash_completion"</span> <span class="o">]</span> <span class="o">&amp;&amp;</span> <span class="se">\.</span> <span class="s2">"</span><span class="nv">$NVM_DIR</span><span class="s2">/bash_completion"</span>  <span class="c"># Habilita o bash_completion</span>
<span class="k">fi</span>
</code></pre></div></div> <p>Reinicie seu terminal, ou apenas recarregue o arquivo <code class="language-plaintext highlighter-rouge">~/.bashrc</code>:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">.</span> ~/.bashrc
</code></pre></div></div> <h2 id="instalando-o-node-versão-mais-recente">Instalando o Node (versão mais recente)</h2> <p>Para instalar a versão mais recente do node, execute o seguinte comando:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nvm <span class="nb">install</span> <span class="si">$(</span>nvm ls-remote | <span class="nb">grep</span> <span class="nt">-i</span> latest | <span class="nb">tail</span> <span class="nt">-n</span> 1 |
  <span class="nb">sed</span> <span class="nt">-ne</span> <span class="s1">'s/[^v0-9]*\(\([0-9]*\.\)\{0,4\}[0-9][^.]\).*/\1/p'</span> | xargs<span class="si">)</span>
</code></pre></div></div> <p>No meu caso, a última versão disponível é a <code class="language-plaintext highlighter-rouge">v20.2.0</code>. É possível verificar a versão instalada executando:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>node <span class="nt">--version</span>
</code></pre></div></div> <h2 id="instalando-o-slidev">Instalando o sli.dev</h2> <p>Para instalar o sli.dev, é só executar:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm init slidev
</code></pre></div></div> <p>Este comando irá instalar tudo o que precisa, pedir o nome do projeto e iniciar o projeto modelo. Após a instalação, as seguintes linhas devem aparecer no seu terminal:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>public slide show   &gt; http://localhost:3030/
  presenter mode      &gt; http://localhost:3030/presenter/
  remote control      &gt; pass --remote to enable

  shortcuts           &gt; restart | open | edit
</code></pre></div></div> <p>Se o browser não abriu automaticamente, é só abri-lo manualmente e acessar a URL <code class="language-plaintext highlighter-rouge">http://localhost:3030/</code>. Para parar a execução do servidor, basta pressionar <code class="language-plaintext highlighter-rouge">Ctrl+C</code> no terminal. Depois de parado, é possível iniciar novamente o servidor de desenvolvimento entrando no diretório criado e executando:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm run-script dev
</code></pre></div></div> <p>Para ver uma lista de comandos (scripts), execute <code class="language-plaintext highlighter-rouge">npm run</code>:</p> <pre><code class="language-txt">Scripts available in XXXXXXXXX via `npm run-script`:
  build
    slidev build
  dev
    slidev --open
  export
    slidev export
</code></pre> <p>Se você quiser modificar qualquer um desses comandos (ou criar mais, como exportar as notas do apresentador), você pode editar o arquivo <code class="language-plaintext highlighter-rouge">package.json</code>. Por exemplo, para adicionar um comando para exportar as notas do apresentador, adicione as seguintes linhas à seção <code class="language-plaintext highlighter-rouge">scripts</code>:</p> <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nl">"export_notes"</span><span class="p">:</span><span class="w"> </span><span class="s2">"slidev export-notes"</span><span class="w">
</span></code></pre></div></div> <h2 id="mudando-o-tema-do-slidev">Mudando o tema do sli.dev</h2> <p>Para alterar o tema da apresentação, basta editar o atributo <code class="language-plaintext highlighter-rouge">theme</code> no cabeçalho (ou <a href="https://sli.dev/guide/syntax.html#front-matter-layouts">front matter</a>) do arquivo <code class="language-plaintext highlighter-rouge">slides.md</code>. Após a alteração, a interface cli baixa automaticamente e aplica o novo tema.</p> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">theme</span><span class="pi">:</span> <span class="s">academic</span>
</code></pre></div></div> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/blog/2023-06-01-slidev_for_non_web_devs/change_theme-480.webp 480w,/assets/img/blog/2023-06-01-slidev_for_non_web_devs/change_theme-800.webp 800w,/assets/img/blog/2023-06-01-slidev_for_non_web_devs/change_theme-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/blog/2023-06-01-slidev_for_non_web_devs/change_theme.png" class="img-fluid rounded z-depth-1 mx-auto d-block" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <div class="caption"> Instalando o novo tema no sli.dev. </div> <h2 id="configurações-básicas">Configurações básicas</h2> <p>Não sou um usuário avançado do sli.dev ou um programador Web. Por isso, demorei algum tempo para descobrir algumas coisas, e acho que vale a pena mencioná-las. A primeira é forçar os slides a ficarem em modo escuro. Para fazer isso, adicione a seguinte linha ao cabeçalho do <code class="language-plaintext highlighter-rouge">slides.md</code>:</p> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">colorSchema</span><span class="pi">:</span> <span class="s2">"</span><span class="s">dark"</span>
</code></pre></div></div> <p>Ao utilizar o tema <code class="language-plaintext highlighter-rouge">academic</code>, por padrão, cada slide com um <code class="language-plaintext highlighter-rouge"># título</code> será adicionado ao índice. Para ocultar um slide do índice, adicione a seguinte linha ao cabeçalho do slide:</p> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">hideInToc</span><span class="pi">:</span> <span class="kc">true</span>
</code></pre></div></div> <p>Por uma questão de organização, eu prefiro criar um arquivo diferente para cada seção da minha apresentação e, em seguida, importar esses arquivos no meu <code class="language-plaintext highlighter-rouge">slides.md</code> principal. Para fazer isso, crie um novo arquivo com a extensão markdown e adicione as seguintes linhas ao <code class="language-plaintext highlighter-rouge">slides.md</code> para cada arquivo a ser incluído:</p> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">---</span>
<span class="na">src</span><span class="pi">:</span> <span class="s">slides/other_slide.md</span>
<span class="nn">---</span>
</code></pre></div></div> <h2 id="exportando-os-slides">Exportando os slides</h2> <p><a href="https://sli.dev/guide/exporting.html">Exportar para PDF ou PNG</a> depende do <code class="language-plaintext highlighter-rouge">Playwright</code> para renderização. Portanto, é necessário instalar o <code class="language-plaintext highlighter-rouge">playwright-chromium</code> para utilizar este recurso. Para isso, execute:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm i <span class="nt">-D</span> playwright-chromium
</code></pre></div></div> <p>Depois, adicione as seguintes linhas à seção <code class="language-plaintext highlighter-rouge">scripts</code> do arquivo <code class="language-plaintext highlighter-rouge">package.json</code>:</p> <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nl">"export_slides"</span><span class="p">:</span><span class="w"> </span><span class="s2">"slidev export --with-toc --with-clicks"</span><span class="w">
</span></code></pre></div></div> <p>Por fim, execute o comando:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm run-script export_slides
</code></pre></div></div> <h2 id="atualizando-as-dependências">Atualizando as dependências</h2> <p>Para atualizar o <code class="language-plaintext highlighter-rouge">node</code> para a versão mais recente, execute:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nvm <span class="nb">install</span> <span class="si">$(</span>nvm ls-remote | <span class="nb">grep</span> <span class="nt">-i</span> latest | <span class="nb">tail</span> <span class="nt">-n</span> 1 |
  <span class="nb">sed</span> <span class="nt">-ne</span> <span class="s1">'s/[^v0-9]*\(\([0-9]*\.\)\{0,4\}[0-9][^.]\).*/\1/p'</span> | xargs<span class="si">)</span> <span class="nt">--reinstall-packages-from</span><span class="o">=</span>current
</code></pre></div></div> <p>Para verificar as dependências que precisam ser atualizadas, execute:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm outdated
</code></pre></div></div> <p>que irá produzir algo como:</p> <pre><code class="language-txt">Package      Current   Wanted  Latest  Location                  Depended by
@slidev/cli  0.43.11  0.43.15  0.46.1  node_modules/@slidev/cli  xxxxxxxx
</code></pre> <p>Para atualizar as dependências instaladas, basta executar:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm update
</code></pre></div></div> <p>Tenha em mente que o <code class="language-plaintext highlighter-rouge">npm update</code> nunca atualizará para uma versão de quebra de compatibilidade, apenas para uma versão menor. O que isso significa é que ele usará a versão <code class="language-plaintext highlighter-rouge">Wanted</code> na tabela acima em vez da versão <code class="language-plaintext highlighter-rouge">Latest</code>. Para obter a versão <code class="language-plaintext highlighter-rouge">Latest</code>, chame o comando de instalação com <code class="language-plaintext highlighter-rouge">@latest</code> anexado ao nome do pacote. Por exemplo, para atualizar o <code class="language-plaintext highlighter-rouge">@slidev/cli</code> para a versão mais recente, execute:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm <span class="nb">install</span> @slidev/cli@latest
</code></pre></div></div>]]></content><author><name></name></author><category term="web"/><category term="presentation"/><category term="programming"/><category term="code"/><category term="slides"/><category term="sli.dev"/><category term="web"/><summary type="html"><![CDATA[Como configurar e usar sli.dev para desenvolvedores que não são web]]></summary></entry><entry><title type="html">Melhorando seu código Python com truques simples</title><link href="https://george-gca.github.io/pt-br/blog/2023/simple-improvements-python-code/" rel="alternate" type="text/html" title="Melhorando seu código Python com truques simples"/><published>2023-01-25T13:28:15+00:00</published><updated>2023-01-25T13:28:15+00:00</updated><id>https://george-gca.github.io/blog/2023/simple-improvements-python-code</id><content type="html" xml:base="https://george-gca.github.io/blog/2023/simple-improvements-python-code/"><![CDATA[<p>Nosso código às vezes está lento. Às vezes, está consumindo muita memória. Talvez não esteja tão legível quanto gostaríamos que fosse. Neste post, veremos como utilizar algumas funções da biblioteca padrão para melhorar o nosso código. Todo o código usado neste post <a href="https://gist.github.com/george-gca/bea9d8c23a0932a22d6b1b80006629f4">está disponível aqui</a>. Embora eu apresente apenas algumas funções que uso com frequência, há muitas mais que podem ser usadas para melhorar seu código. Encorajo você a verificar a <a href="https://docs.python.org/3/library/">documentação oficial</a> para descobrir o que mais está disponível.</p> <h2 id="use-list-comprehension-sempre-que-possível">Use <a href="https://realpython.com/list-comprehension-python/">list comprehension</a> sempre que possível</h2> <h3 id="o-que-isso-significa">O que isso significa?</h3> <p>List comprehension é basicamente outra maneira de criar uma lista. Suponha que queremos criar uma lista de valores em um intervalo:</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># forma tradicional
</span><span class="n">tmp</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">10_000_000</span><span class="p">):</span>
  <span class="n">tmp</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>

<span class="c1"># list comprehension
</span><span class="n">tmp</span> <span class="o">=</span> <span class="p">[</span><span class="n">i</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">10_000_000</span><span class="p">)]</span>
</code></pre></div></div> <h3 id="por-que-isso-importa">Por que isso importa?</h3> <p>List comprehension geralmente é muito mais rápido do que o loop tradicional. Vamos compará-los:</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">tmp</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">10_000_000</span><span class="p">):</span>
  <span class="n">tmp</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
</code></pre></div></div> <pre><code class="language-txt">1.04 s ± 89.8 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)
memory increment: 293.57 MiB
</code></pre> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">tmp</span> <span class="o">=</span> <span class="p">[</span><span class="n">i</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">10_000_000</span><span class="p">)]</span>
</code></pre></div></div> <pre><code class="language-txt">731 ms ± 71.6 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)
memory increment: 285.82 MiB
</code></pre> <h3 id="outros-exemplos">Outros exemplos</h3> <h4 id="criando-uma-lista-com-uma-condição-if">Criando uma lista com uma condição <code class="language-plaintext highlighter-rouge">if</code></h4> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">tmp</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">10_000_000</span><span class="p">):</span>
  <span class="k">if</span> <span class="n">i</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
    <span class="n">tmp</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
</code></pre></div></div> <pre><code class="language-txt">1.11 s ± 24 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)
memory increment: -0.25 MiB
</code></pre> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">tmp</span> <span class="o">=</span> <span class="p">[</span><span class="n">i</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">10_000_000</span><span class="p">)</span> <span class="k">if</span> <span class="n">i</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span><span class="p">]</span>
</code></pre></div></div> <pre><code class="language-txt">944 ms ± 6.79 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)
memory increment: 115.54 MiB
</code></pre> <hr/> <h4 id="criando-uma-lista-com-uma-condição-if-else">Criando uma lista com uma condição <code class="language-plaintext highlighter-rouge">if else</code></h4> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">tmp</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">10_000_000</span><span class="p">):</span>
  <span class="k">if</span> <span class="n">i</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
    <span class="n">tmp</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
  <span class="k">else</span><span class="p">:</span>
    <span class="n">tmp</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span>
</code></pre></div></div> <pre><code class="language-txt">1.61 s ± 90.5 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)
memory increment: 32.89 MiB
</code></pre> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">tmp</span> <span class="o">=</span> <span class="p">[</span><span class="n">i</span> <span class="k">if</span> <span class="n">i</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span> <span class="k">else</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">10_000_000</span><span class="p">)]</span>
</code></pre></div></div> <pre><code class="language-txt">1.33 s ± 11.4 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)
memory increment: 273.82 MiB
</code></pre> <h3 id="a-maneira-mais-rápida-de-criar-uma-lista">A maneira mais rápida de criar uma lista</h3> <p>Ao gerar uma lista a partir de um gerador (<code class="language-plaintext highlighter-rouge">range</code> neste caso), é mais rápido usar o construtor <code class="language-plaintext highlighter-rouge">list()</code>.</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">tmp</span> <span class="o">=</span> <span class="nf">list</span><span class="p">(</span><span class="nf">range</span><span class="p">(</span><span class="mi">10_000_000</span><span class="p">))</span>
</code></pre></div></div> <p>Para validar isso, vamos comparar o código para 7 execuções, 10 loops cada:</p> <table> <thead> <tr> <th style="text-align: center"> </th> <th style="text-align: center">loop</th> <th style="text-align: center">list comprehension</th> <th style="text-align: center">construtor de lista</th> </tr> </thead> <tbody> <tr> <td style="text-align: center">média ± desvio padrão. por loop</td> <td style="text-align: center">1.04 s ± 89.8 ms</td> <td style="text-align: center">731 ms ± 71.6 ms</td> <td style="text-align: center">301 ms ± 18.4 ms</td> </tr> <tr> <td style="text-align: center">incremento de memória</td> <td style="text-align: center">293.57 MiB</td> <td style="text-align: center">285.82 MiB</td> <td style="text-align: center">75.12 MiB</td> </tr> </tbody> </table> <p>Por que o construtor <code class="language-plaintext highlighter-rouge">list()</code> é mais rápido? De acordo com <a href="https://stackoverflow.com/a/29356931">esta resposta no StackOverflow</a>:</p> <blockquote> <p>A list comprehension executa o loop em bytecode Python, como um loop for regular. A chamada list() itera inteiramente em código C, o que é muito mais rápido.</p> </blockquote> <p>Para comparar todas essas soluções, vamos verificar os bytecodes equivalentes. Para o caso do loop:</p> <pre><code class="language-txt">1           0 BUILD_LIST               0
            2 STORE_NAME               0 (tmp)

2           4 LOAD_NAME                1 (range)
            6 LOAD_CONST               0 (10000000)
            8 CALL_FUNCTION            1
            10 GET_ITER
    &gt;&gt;   12 FOR_ITER                14 (to 28)
            14 STORE_NAME               2 (i)
            16 LOAD_NAME                0 (tmp)
            18 LOAD_METHOD              3 (append)
            20 LOAD_NAME                2 (i)
            22 CALL_METHOD              1
            24 POP_TOP
            26 JUMP_ABSOLUTE           12
    &gt;&gt;   28 LOAD_CONST               1 (None)
            30 RETURN_VALUE
</code></pre> <p>Para a solução de list comprehension:</p> <pre><code class="language-txt">1           0 LOAD_CONST               0 (&lt;code object &lt;listcomp&gt; at 0x7f272c8eaf50, file "&lt;stdin&gt;", line 1&gt;)
            2 LOAD_CONST               1 ('&lt;listcomp&gt;')
            4 MAKE_FUNCTION            0
            6 LOAD_NAME                0 (range)
            8 LOAD_NAME                1 (10_000_000)
            10 CALL_FUNCTION            1
            12 GET_ITER
            14 CALL_FUNCTION            1
            16 POP_TOP
            18 LOAD_CONST               2 (None)
            20 RETURN_VALUE

Disassembly of &lt;code object &lt;listcomp&gt; at 0x7f272c8eaf50, file "&lt;stdin&gt;", line 1&gt;:
1           0 BUILD_LIST               0
            2 LOAD_FAST                0 (.0)
    &gt;&gt;    4 FOR_ITER                 8 (to 14)
            6 STORE_FAST               1 (i)
            8 LOAD_FAST                1 (i)
            10 LIST_APPEND              2
            12 JUMP_ABSOLUTE            4
    &gt;&gt;   14 RETURN_VALUE
</code></pre> <p>E para a solução do construtor de lista:</p> <pre><code class="language-txt">1           0 LOAD_NAME                0 (list)
            2 LOAD_NAME                1 (range)
            4 LOAD_NAME                2 (10_000_000)
            6 CALL_FUNCTION            1
            8 CALL_FUNCTION            1
            10 POP_TOP
            12 LOAD_CONST               0 (None)
            14 RETURN_VALUE
</code></pre> <p>Podemos ver que o construtor <code class="language-plaintext highlighter-rouge">list()</code> gera menos bytecodes.</p> <h2 id="use-geradores-generators-e-iteradores-iterators-sempre-que-possível">Use geradores (<a href="https://realpython.com/introduction-to-python-generators/">generators</a>) e iteradores (<a href="https://docs.python.org/3/glossary.html#term-iterator">iterators</a>) sempre que possível</h2> <p>Para criar um gerador como uma list comprehension (chamada expressão geradora ou <a href="https://docs.python.org/3/glossary.html#index-20">generator expression</a>), basta substituir os colchetes [ ] por parênteses ( ).</p> <h3 id="por-que-isso-importa-1">Por que isso importa?</h3> <p><a href="https://docs.python.org/3/glossary.html#index-19">Geradores</a> parecem uma função normal, porém contém expressões <code class="language-plaintext highlighter-rouge">yield</code> para produzir uma série de valores utilizáveis em um loop for ou que podem ser recuperados um de cada vez com a função <code class="language-plaintext highlighter-rouge">next()</code>. Ele retorna um iterador de gerador (<a href="https://docs.python.org/3/glossary.html#term-generator-iterator">generator iterator</a>), que suspende temporariamente o processamento, lembrando o estado local de execução (incluindo variáveis locais e instruções try pendentes).</p> <p>Vamos fazer algumas comparações:</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">tmp</span> <span class="o">=</span> <span class="nf">sum</span><span class="p">([</span><span class="n">i</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">10_000_000</span><span class="p">)])</span>
</code></pre></div></div> <pre><code class="language-txt">860 ms ± 30.4 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)
</code></pre> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">tmp</span> <span class="o">=</span> <span class="nf">sum</span><span class="p">((</span><span class="n">i</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">10_000_000</span><span class="p">)))</span>
</code></pre></div></div> <pre><code class="language-txt">609 ms ± 2.93 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)
</code></pre> <p>Não é tão diferente, certo? Agora, vamos verificar o consumo de memória. Vamos focar no incremento, pois ele representa a diferença de memória entre o início e o fim desta execução.</p> <pre><code class="language-txt">memory increment: 263.44 MiB
</code></pre> <pre><code class="language-txt">memory increment: 0.00 MiB
</code></pre> <p>O que aconteceu? O gerador retorna apenas um elemento por vez, que por sua vez é fornecido à função sum. Dessa forma, não precisamos gerar previamente toda a lista para realizar a soma dos elementos. Na verdade, como a função <a href="https://docs.python.org/3/library/functions.html#sum">sum</a> recebe um iterador como parâmetro, poderíamos usá-la assim:</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">tmp</span> <span class="o">=</span> <span class="nf">sum</span><span class="p">(</span><span class="n">i</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">10_000_000</span><span class="p">))</span>
</code></pre></div></div> <pre><code class="language-txt">593 ms ± 90.4 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)
memory increment: 0.01 MiB
</code></pre> <p>Ou ainda assim:</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">tmp</span> <span class="o">=</span> <span class="nf">sum</span><span class="p">(</span><span class="nf">range</span><span class="p">(</span><span class="mi">10_000_000</span><span class="p">))</span>
</code></pre></div></div> <pre><code class="language-txt">168 ms ± 4.68 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)
memory increment: 0.00 MiB
</code></pre> <p>Que executa bem mais rápido.</p> <h2 id="evite-gerar-todos-os-valores-sempre-que-possível">Evite gerar todos os valores sempre que possível</h2> <p>Para os exemplos seguintes, suponha que temos uma lista ordenada de valores.</p> <h3 id="o-que-fazer-se-quisermos-apenas-os-valores-inferiores-a-um-limite">O que fazer se quisermos apenas os valores inferiores a um limite?</h3> <p>A maneira utilizando list comprehension de conseguir isso é esta:</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">tmp</span> <span class="o">=</span> <span class="p">[</span><span class="n">i</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">10_000_000</span><span class="p">)</span> <span class="k">if</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">1_000_000</span><span class="p">]</span>
</code></pre></div></div> <pre><code class="language-txt">596 ms ± 7.16 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)
memory increment: 0.02 MiB
</code></pre> <p>Agora, com loops:</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">tmp</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">10_000_000</span><span class="p">):</span>
  <span class="k">if</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">1_000_000</span><span class="p">:</span>
    <span class="n">tmp</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
  <span class="k">else</span><span class="p">:</span>
    <span class="k">break</span>
</code></pre></div></div> <pre><code class="language-txt">116 ms ± 2.37 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)
memory increment: 0.01 MiB
</code></pre> <p>Por que é mais rápido com loop?</p> <p>Porque usando list comprehension toda a lista deve ser gerada antes de selecionar os elementos. O mesmo não acontece para o loop, que só percorre alguns dos valores.</p> <h3 id="podemos-fazer-melhor">Podemos fazer melhor?</h3> <p>Sim, com <a href="https://docs.python.org/3/library/itertools.html#itertools.takewhile">takewhile</a>.</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">itertools</span> <span class="kn">import</span> <span class="n">takewhile</span>

<span class="n">tmp</span> <span class="o">=</span> <span class="nf">list</span><span class="p">(</span><span class="nf">takewhile</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="mi">1_000_000</span><span class="p">,</span> <span class="nf">range</span><span class="p">(</span><span class="mi">10_000_000</span><span class="p">)))</span>
</code></pre></div></div> <pre><code class="language-txt">107 ms ± 2.37 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)
memory increment: 0.01 MiB
</code></pre> <hr/> <p>Nota: <code class="language-plaintext highlighter-rouge">takewhile</code> só é mais rápido quando você sabe que a condição será satisfeita “em breve”.</p> <hr/> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">tmp</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">10_000_000</span><span class="p">):</span>
  <span class="k">if</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">9_000_000</span><span class="p">:</span>
    <span class="n">tmp</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
  <span class="k">else</span><span class="p">:</span>
    <span class="k">break</span>
</code></pre></div></div> <pre><code class="language-txt">1.12 s ± 27.5 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)
memory increment: 3.70 MiB
</code></pre> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">tmp</span> <span class="o">=</span> <span class="p">[</span><span class="n">i</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">10_000_000</span><span class="p">)</span> <span class="k">if</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">9_000_000</span><span class="p">]</span>
</code></pre></div></div> <pre><code class="language-txt">1.05 s ± 51 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)
memory increment: 246.21 MiB
</code></pre> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">tmp</span> <span class="o">=</span> <span class="nf">list</span><span class="p">(</span><span class="nf">takewhile</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="mi">9_000_000</span><span class="p">,</span> <span class="nf">range</span><span class="p">(</span><span class="mi">10_000_000</span><span class="p">)))</span>
</code></pre></div></div> <pre><code class="language-txt">1.06 s ± 8.41 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)
memory increment: 0.00 MiB
</code></pre> <p>Nesse caso, é mais rápido gerar a lista inteira e depois filtrá-la. Mas observe que, embora usar list comprehension seja mais rápido, <code class="language-plaintext highlighter-rouge">takewhile</code> ocupa menos memória, pois não precisa armazenar a lista inteira, mesmo que momentaneamente.</p> <h3 id="e-se-quisermos-apenas-os-valores-superiores-a-um-limite">E se quisermos apenas os valores superiores a um limite?</h3> <p>Primeiro, vamos tentar com loops:</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">tmp</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">10_000_000</span><span class="p">):</span>
  <span class="k">if</span> <span class="n">i</span> <span class="o">&gt;</span> <span class="mi">1_000_000</span><span class="p">:</span>
    <span class="n">tmp</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
</code></pre></div></div> <pre><code class="language-txt">1.3 s ± 93.3 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)
memory increment: 0.15 MiB
</code></pre> <p>Agora, com list comprehension:</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">tmp</span> <span class="o">=</span> <span class="p">[</span><span class="n">i</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">10_000_000</span><span class="p">)</span> <span class="k">if</span> <span class="n">i</span> <span class="o">&gt;</span> <span class="mi">1_000_000</span><span class="p">]</span>
</code></pre></div></div> <pre><code class="language-txt">978 ms ± 11.2 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)
memory increment: 169.84 MiB
</code></pre> <p>Neste caso, como o loop percorrerá todos os elementos, ele é mais lento que list comprehension. Porém, ocupa menos memória, pois não precisa armazenar toda a lista.</p> <h3 id="podemos-fazer-melhor-1">Podemos fazer melhor?</h3> <p>Sim, com <a href="https://docs.python.org/3/library/itertools.html#itertools.dropwhile">dropwhile</a></p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">itertools</span> <span class="kn">import</span> <span class="n">dropwhile</span>

<span class="n">tmp</span> <span class="o">=</span> <span class="nf">list</span><span class="p">(</span><span class="nf">dropwhile</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="mi">1_000_000</span><span class="p">,</span> <span class="nf">range</span><span class="p">(</span><span class="mi">10_000_000</span><span class="p">)))</span>
</code></pre></div></div> <pre><code class="language-txt">442 ms ± 10.2 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)
memory increment: 0.05 MiB
</code></pre> <hr/> <p>Nota: <code class="language-plaintext highlighter-rouge">dropwhile</code> também só é mais rápido quando você sabe que a condição será satisfeita “em breve”.</p> <hr/> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">tmp</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">10_000_000</span><span class="p">):</span>
  <span class="k">if</span> <span class="n">i</span> <span class="o">&gt;</span> <span class="mi">9_000_000</span><span class="p">:</span>
    <span class="n">tmp</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
</code></pre></div></div> <pre><code class="language-txt">654 ms ± 9.3 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)
memory increment: 0.00 MiB
</code></pre> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">tmp</span> <span class="o">=</span> <span class="p">[</span><span class="n">i</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">10_000_000</span><span class="p">)</span> <span class="k">if</span> <span class="n">i</span> <span class="o">&gt;</span> <span class="mi">9_000_000</span><span class="p">]</span>
</code></pre></div></div> <pre><code class="language-txt">623 ms ± 13.6 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)
memory increment: 0.01 MiB
</code></pre> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">tmp</span> <span class="o">=</span> <span class="nf">list</span><span class="p">(</span><span class="nf">dropwhile</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="mi">9_000_000</span><span class="p">,</span> <span class="nf">range</span><span class="p">(</span><span class="mi">10_000_000</span><span class="p">)))</span>
</code></pre></div></div> <pre><code class="language-txt">924 ms ± 104 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)
memory increment: 0.01 MiB
</code></pre> <h3 id="e-quando-queremos-obter-as-primeiras-n-amostras">E quando queremos obter as primeiras N amostras?</h3> <p>Com loops:</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">tmp</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">n</span><span class="p">,</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">enumerate</span><span class="p">(</span><span class="nf">range</span><span class="p">(</span><span class="mi">10_000_000</span><span class="p">)):</span>
  <span class="k">if</span> <span class="n">n</span> <span class="o">&lt;</span> <span class="mi">1_000_000</span><span class="p">:</span>
    <span class="n">tmp</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
  <span class="k">else</span><span class="p">:</span>
    <span class="k">break</span>
</code></pre></div></div> <pre><code class="language-txt">147 ms ± 3.09 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)
memory increment: 0.00 MiB
</code></pre> <p>Fazendo com list comprehension:</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">tmp</span> <span class="o">=</span> <span class="p">[</span><span class="n">i</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">10_000_000</span><span class="p">)][:</span><span class="mi">1_000_000</span><span class="p">]</span>
</code></pre></div></div> <pre><code class="language-txt">523 ms ± 10.8 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)
memory increment: 0.01 MiB
</code></pre> <p>Por que é mais rápido com loops?</p> <p>Porque usando list comprehension toda a lista deve ser gerada antes de fazer a operação de seleção. O mesmo não é verdade para o loop, que só percorre alguns dos valores.</p> <h3 id="podemos-fazer-melhor-2">Podemos fazer melhor?</h3> <p>Sim, com <a href="https://docs.python.org/3/library/itertools.html#itertools.islice">islice</a></p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">itertools</span> <span class="kn">import</span> <span class="n">islice</span>

<span class="n">tmp</span> <span class="o">=</span> <span class="nf">list</span><span class="p">(</span><span class="nf">islice</span><span class="p">((</span><span class="n">i</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">10_000_000</span><span class="p">)),</span> <span class="mi">1_000_000</span><span class="p">))</span>
</code></pre></div></div> <pre><code class="language-txt">72.5 ms ± 1.82 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)
memory increment: 0.01 MiB
</code></pre> <h3 id="e-quando-queremos-obter-as-últimas-n-amostras">E quando queremos obter as últimas N amostras?</h3> <p>Podemos obter o mesmo resultado com <code class="language-plaintext highlighter-rouge">islice</code>. Vamos direto às comparações:</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">tmp</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">n</span><span class="p">,</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">enumerate</span><span class="p">(</span><span class="nf">range</span><span class="p">(</span><span class="mi">10_000_000</span><span class="p">)):</span>
  <span class="k">if</span> <span class="n">n</span> <span class="o">&gt;</span> <span class="mi">9_000_000</span><span class="p">:</span>
    <span class="n">tmp</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
</code></pre></div></div> <pre><code class="language-txt">1.44 s ± 95.3 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)
memory increment: 0.00 MiB
</code></pre> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">tmp</span> <span class="o">=</span> <span class="p">[</span><span class="n">i</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">10_000_000</span><span class="p">)][</span><span class="mi">9_000_000</span><span class="p">:]</span>
</code></pre></div></div> <pre><code class="language-txt">743 ms ± 8.52 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)
memory increment: 177.31 MiB
</code></pre> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">tmp</span> <span class="o">=</span> <span class="nf">list</span><span class="p">(</span><span class="nf">islice</span><span class="p">((</span><span class="n">i</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">10_000_000</span><span class="p">)),</span> <span class="mi">9_000_000</span><span class="p">,</span> <span class="bp">None</span><span class="p">))</span>
</code></pre></div></div> <pre><code class="language-txt">796 ms ± 11.8 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)
memory increment: -0.16 MiB
</code></pre> <hr/> <p>Observe novamente que, assim como aconteceu no caso do <code class="language-plaintext highlighter-rouge">dropwhile</code> quando a condição demora mais para ser satisfeita, usar <code class="language-plaintext highlighter-rouge">islice</code> é mais lento do que fazer com list comprehension, porém ocupa muito menos memória.</p> <h3 id="e-se-quisermos-apenas-contar-o-número-de-elementos-que-serão-gerados">E se quisermos apenas contar o número de elementos que serão gerados?</h3> <p>Suponha que queremos saber quantos elementos serão gerados a partir de uma condição. Normalmente, faríamos assim:</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">tmp</span> <span class="o">=</span> <span class="p">[</span><span class="n">i</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">value</span><span class="p">)</span> <span class="k">if</span> <span class="n">i</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span><span class="p">]</span>
<span class="n">count</span> <span class="o">=</span> <span class="nf">len</span><span class="p">(</span><span class="n">tmp</span><span class="p">)</span>
</code></pre></div></div> <pre><code class="language-txt">1.02 s ± 63.6 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)
increment: 0.04 MiB
</code></pre> <p>Mas o problema é que estamos armazenando uma lista inteira na memória apenas para obter seu tamanho.</p> <h3 id="podemos-fazer-melhor-3">Podemos fazer melhor?</h3> <p>Sim, criando um gerador que gere <code class="language-plaintext highlighter-rouge">1</code> toda vez que a condição for verdadeira, e somando tudo.</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">count</span> <span class="o">=</span> <span class="nf">sum</span><span class="p">(</span><span class="mi">1</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">value</span><span class="p">)</span> <span class="k">if</span> <span class="n">i</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
</code></pre></div></div> <pre><code class="language-txt">991 ms ± 18.9 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)
increment: 0.00 MiB
</code></pre> <h2 id="outras-funções-úteis-de-itertools">Outras funções úteis de <a href="https://docs.python.org/3/library/itertools.html?highlight=itertools#module-itertools">itertools</a></h2> <p>Já introduzimos 3 das funções mais úteis: <code class="language-plaintext highlighter-rouge">dropwhile</code>, <code class="language-plaintext highlighter-rouge">islice</code> e <code class="language-plaintext highlighter-rouge">takewhile</code>. Vamos verificar outras funções úteis.</p> <h3 id="cycle"><a href="https://docs.python.org/3/library/itertools.html?highlight=itertools#itertools.cycle">cycle</a></h3> <p>Repete indefinidamente uma determinada sequência.</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">itertools</span> <span class="kn">import</span> <span class="n">cycle</span>

<span class="n">tmp</span> <span class="o">=</span> <span class="p">[]</span>

<span class="k">for</span> <span class="n">counter</span><span class="p">,</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">enumerate</span><span class="p">(</span><span class="nf">cycle</span><span class="p">(</span><span class="nf">range</span><span class="p">(</span><span class="mi">4</span><span class="p">))):</span>
  <span class="k">if</span> <span class="n">counter</span> <span class="o">==</span> <span class="mi">10</span><span class="p">:</span>
    <span class="k">break</span>

  <span class="n">tmp</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>

<span class="nf">print</span><span class="p">(</span><span class="n">tmp</span><span class="p">)</span>
</code></pre></div></div> <pre><code class="language-txt">[0, 1, 2, 3, 0, 1, 2, 3, 0, 1]
</code></pre> <h3 id="repeat"><a href="https://docs.python.org/3/library/itertools.html?highlight=itertools#itertools.repeat">repeat</a></h3> <p>Repete indefinidamente um determinado valor, a menos que o argumento <code class="language-plaintext highlighter-rouge">times</code> seja especificado.</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">itertools</span> <span class="kn">import</span> <span class="n">repeat</span>

<span class="n">tmp</span> <span class="o">=</span> <span class="nf">list</span><span class="p">(</span><span class="nf">repeat</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">5</span><span class="p">))</span>
<span class="nf">print</span><span class="p">(</span><span class="n">tmp</span><span class="p">)</span>
</code></pre></div></div> <pre><code class="language-txt">[10, 10, 10, 10, 10]
</code></pre> <h3 id="product"><a href="https://docs.python.org/3/library/itertools.html?highlight=itertools#itertools.product">product</a></h3> <p>Equivalente a um loop for aninhado.</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">tmp</span> <span class="o">=</span> <span class="p">[]</span>

<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">2</span><span class="p">):</span>
  <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">2</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">2</span><span class="p">):</span>
      <span class="k">for</span> <span class="n">l</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">2</span><span class="p">):</span>
        <span class="n">tmp</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="nf">sum</span><span class="p">([</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="n">k</span><span class="p">,</span> <span class="n">l</span><span class="p">]))</span>

<span class="nf">print</span><span class="p">(</span><span class="n">tmp</span><span class="p">)</span>
</code></pre></div></div> <pre><code class="language-txt">[0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, 3, 3, 4]
</code></pre> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">itertools</span> <span class="kn">import</span> <span class="n">product</span>

<span class="n">tmp</span> <span class="o">=</span> <span class="p">[</span><span class="nf">sum</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">product</span><span class="p">(</span><span class="nf">range</span><span class="p">(</span><span class="mi">2</span><span class="p">),</span> <span class="nf">range</span><span class="p">(</span><span class="mi">2</span><span class="p">),</span> <span class="nf">range</span><span class="p">(</span><span class="mi">2</span><span class="p">),</span> <span class="nf">range</span><span class="p">(</span><span class="mi">2</span><span class="p">))]</span>
<span class="nf">print</span><span class="p">(</span><span class="n">tmp</span><span class="p">)</span>
</code></pre></div></div> <pre><code class="language-txt">[0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, 3, 3, 4]
</code></pre> <p>Como neste caso estamos usando a mesma sequência para todos os loops, podemos usar <code class="language-plaintext highlighter-rouge">repeat</code> para simplificar o código:</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">itertools</span> <span class="kn">import</span> <span class="n">product</span>

<span class="n">tmp</span> <span class="o">=</span> <span class="p">[</span><span class="nf">sum</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">product</span><span class="p">(</span><span class="nf">range</span><span class="p">(</span><span class="mi">2</span><span class="p">),</span> <span class="n">repeat</span><span class="o">=</span><span class="mi">4</span><span class="p">)]</span>
<span class="nf">print</span><span class="p">(</span><span class="n">tmp</span><span class="p">)</span>
</code></pre></div></div> <pre><code class="language-txt">[0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, 3, 3, 4]
</code></pre> <h3 id="itertools-tem-todas-as-funções-combinatórias-implementadas"><a href="https://docs.python.org/3/library/itertools.html?highlight=itertools#module-itertools">itertools</a> tem todas as funções combinatórias implementadas</h3> <table> <thead> <tr> <th style="text-align: center">arranjo</th> <th style="text-align: center">permutação</th> <th style="text-align: center">combinação com repetição</th> <th style="text-align: center">combinação</th> </tr> </thead> <tbody> <tr> <td style="text-align: center">AA</td> <td style="text-align: center"> </td> <td style="text-align: center">AA</td> <td style="text-align: center"> </td> </tr> <tr> <td style="text-align: center">AB</td> <td style="text-align: center">AB</td> <td style="text-align: center">AB</td> <td style="text-align: center">AB</td> </tr> <tr> <td style="text-align: center">AC</td> <td style="text-align: center">AC</td> <td style="text-align: center">AC</td> <td style="text-align: center">AC</td> </tr> <tr> <td style="text-align: center">AD</td> <td style="text-align: center">AD</td> <td style="text-align: center">AD</td> <td style="text-align: center">AD</td> </tr> <tr> <td style="text-align: center">BA</td> <td style="text-align: center">BA</td> <td style="text-align: center"> </td> <td style="text-align: center"> </td> </tr> <tr> <td style="text-align: center">BB</td> <td style="text-align: center"> </td> <td style="text-align: center">BB</td> <td style="text-align: center"> </td> </tr> <tr> <td style="text-align: center">BC</td> <td style="text-align: center">BC</td> <td style="text-align: center">BC</td> <td style="text-align: center">BC</td> </tr> <tr> <td style="text-align: center">BD</td> <td style="text-align: center">BD</td> <td style="text-align: center">BD</td> <td style="text-align: center">BD</td> </tr> <tr> <td style="text-align: center">CA</td> <td style="text-align: center">CA</td> <td style="text-align: center"> </td> <td style="text-align: center"> </td> </tr> <tr> <td style="text-align: center">CB</td> <td style="text-align: center">CB</td> <td style="text-align: center"> </td> <td style="text-align: center"> </td> </tr> <tr> <td style="text-align: center">CC</td> <td style="text-align: center"> </td> <td style="text-align: center">CC</td> <td style="text-align: center"> </td> </tr> <tr> <td style="text-align: center">CD</td> <td style="text-align: center">CD</td> <td style="text-align: center">CD</td> <td style="text-align: center">CD</td> </tr> <tr> <td style="text-align: center">DA</td> <td style="text-align: center">DA</td> <td style="text-align: center"> </td> <td style="text-align: center"> </td> </tr> <tr> <td style="text-align: center">DB</td> <td style="text-align: center">DB</td> <td style="text-align: center"> </td> <td style="text-align: center"> </td> </tr> <tr> <td style="text-align: center">DC</td> <td style="text-align: center">DC</td> <td style="text-align: center"> </td> <td style="text-align: center"> </td> </tr> <tr> <td style="text-align: center">DD</td> <td style="text-align: center"> </td> <td style="text-align: center">DD</td> <td style="text-align: center"> </td> </tr> </tbody> </table> <h2 id="melhorando-o-código-com-functools">Melhorando o código com <a href="https://docs.python.org/3/library/functools.html?highlight=functools#module-functools">functools</a></h2> <h3 id="armazenando-chamadas-de-função-com-lru_cache">Armazenando chamadas de função com <a href="https://docs.python.org/3/library/functools.html#functools.lru_cache">lru_cache</a></h3> <p>Vamos pegar a função de Fibonacci, por exemplo, que chama a si mesma recursivamente.</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">fib</span><span class="p">(</span><span class="n">n</span><span class="p">):</span>
    <span class="k">if</span> <span class="n">n</span> <span class="o">&lt;</span> <span class="mi">2</span><span class="p">:</span>
        <span class="k">return</span> <span class="n">n</span>
    <span class="k">return</span> <span class="nf">fib</span><span class="p">(</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="o">+</span> <span class="nf">fib</span><span class="p">(</span><span class="n">n</span><span class="o">-</span><span class="mi">2</span><span class="p">)</span>
</code></pre></div></div> <p>Vamos usá-la em uma list comprehension para obter os primeiros 16 números de Fibonacci:</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">tmp</span> <span class="o">=</span> <span class="p">[</span><span class="nf">fib</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">16</span><span class="p">)]</span>
</code></pre></div></div> <pre><code class="language-txt">698 µs ± 152 µs per loop (mean ± std. dev. of 7 runs, 10 loops each)
</code></pre> <p>Leva um bom tempo para executar para um número pequeno. Mas e se pudéssemos salvar automaticamente os resultados das chamadas anteriores à função? É disso que se trata a <code class="language-plaintext highlighter-rouge">lru_cache</code>. Ela armazena chamadas anteriores, com seus parâmetros fornecidos e saída calculada, como uma cache que remove os elementos menos recentemente usados (cache LRU). Dessa forma, sempre que chamarmos a função e essa chamada já tiver sido feita (e seus resultados ainda estiverem armazenados na cache), simplesmente pegamos os resultados da cache.</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">functools</span> <span class="kn">import</span> <span class="n">lru_cache</span>

<span class="nd">@lru_cache</span>
<span class="k">def</span> <span class="nf">fib</span><span class="p">(</span><span class="n">n</span><span class="p">):</span>
    <span class="k">if</span> <span class="n">n</span> <span class="o">&lt;</span> <span class="mi">2</span><span class="p">:</span>
        <span class="k">return</span> <span class="n">n</span>
    <span class="k">return</span> <span class="nf">fib</span><span class="p">(</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="o">+</span> <span class="nf">fib</span><span class="p">(</span><span class="n">n</span><span class="o">-</span><span class="mi">2</span><span class="p">)</span>
</code></pre></div></div> <p>Vamos tentar novamente:</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">tmp</span> <span class="o">=</span> <span class="p">[</span><span class="nf">fib</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">16</span><span class="p">)]</span>
</code></pre></div></div> <pre><code class="language-txt">3.34 µs ± 719 ns per loop (mean ± std. dev. of 7 runs, 10 loops each)
</code></pre> <p>Agora, vamos verificar as informações da cache:</p> <ul> <li>hits: número de vezes que a função foi chamada e os resultados já estavam lá;</li> <li>misses: número de vezes que a função foi chamada e o resultado não estava armazenado;</li> <li>maxsize: tamanho máximo permitido para a cache;</li> <li>currsize: tamanho atual da cache (resultados armazenados).</li> </ul> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">print</span><span class="p">(</span><span class="n">fib</span><span class="p">.</span><span class="nf">cache_info</span><span class="p">())</span>
</code></pre></div></div> <pre><code class="language-txt">CacheInfo(hits=1132, misses=16, maxsize=128, currsize=16)
</code></pre> <h3 id="criando-funções-com-valores-padrões-com-partial">Criando funções com valores padrões com <a href="https://docs.python.org/3/library/functools.html#functools.partial">partial</a></h3> <p>Suponha que temos uma função chamada <code class="language-plaintext highlighter-rouge">divide_by</code> que realiza a divisão. É uma função bastante genérica, mas geralmente é chamada com alguns valores específicos, como divisão por dois ou por três.</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">divide_by</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">):</span>
  <span class="k">return</span> <span class="n">x</span> <span class="o">/</span> <span class="n">y</span>

<span class="nf">print</span><span class="p">(</span><span class="nf">divide_by</span><span class="p">(</span><span class="mi">12</span><span class="p">,</span> <span class="mi">2</span><span class="p">))</span>
<span class="nf">print</span><span class="p">(</span><span class="nf">divide_by</span><span class="p">(</span><span class="mi">12</span><span class="p">,</span> <span class="mi">3</span><span class="p">))</span>
</code></pre></div></div> <pre><code class="language-txt">6.0
4.0
</code></pre> <p>E se, em vez de criar uma função totalmente nova, pudéssemos apenas criar assinaturas diferentes para a função, uma para cada valor mais comum de y? É para isso que serve <code class="language-plaintext highlighter-rouge">partial</code>:</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">functools</span> <span class="kn">import</span> <span class="n">partial</span>

<span class="n">divide_by_two</span> <span class="o">=</span> <span class="nf">partial</span><span class="p">(</span><span class="n">divide_by</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
<span class="n">divide_by_three</span> <span class="o">=</span> <span class="nf">partial</span><span class="p">(</span><span class="n">divide_by</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="mi">3</span><span class="p">)</span>

<span class="nf">print</span><span class="p">(</span><span class="nf">divide_by_two</span><span class="p">(</span><span class="mi">12</span><span class="p">))</span>
<span class="nf">print</span><span class="p">(</span><span class="nf">divide_by_three</span><span class="p">(</span><span class="mi">12</span><span class="p">))</span>
</code></pre></div></div> <pre><code class="language-txt">6.0
4.0
</code></pre>]]></content><author><name></name></author><category term="python"/><category term="programming"/><category term="code"/><category term="improvement"/><category term="python"/><summary type="html"><![CDATA[Como usar funções da biblioteca padrão para melhorar seu código.]]></summary></entry><entry><title type="html">O problema da reproducibilidade de códigos de pesquisa</title><link href="https://george-gca.github.io/pt-br/blog/2022/research-code-reproducibility/" rel="alternate" type="text/html" title="O problema da reproducibilidade de códigos de pesquisa"/><published>2022-10-21T15:13:16+00:00</published><updated>2022-10-21T15:13:16+00:00</updated><id>https://george-gca.github.io/blog/2022/research-code-reproducibility</id><content type="html" xml:base="https://george-gca.github.io/blog/2022/research-code-reproducibility/"><![CDATA[<p>Todo mundo no meio de pesquisa já passou por esse problema:</p> <blockquote> <p>Você encontrou um artigo que deseja reproduzir. Você descobriu que o autor original (ou possivelmente outro pesquisador) publicou o código para executar esses experimentos. Você baixa o código, tenta executá-lo, mas não funciona. Falta trechos de código, bases de dados ou dependências. Talvez o código esteja um pouco desatualizado e você precise atualizá-lo para executar em sua máquina. Ou você precisa descobrir quais versões específicas das bibliotecas os autores usaram. Você passa horas tentando executar o código, mas sem sucesso. Você tenta entrar em contato com os autores, mas eles não respondem. Você tenta consertar o código sozinho, mas é muito complicado. Você desiste.</p> </blockquote> <p>Quem nunca ficou tão frustrado a ponto de desistir daquele código, talvez até daquele artigo? Nossa, conheço pessoas que desistiram de todo um campo de pesquisa porque não conseguiram reproduzir os resultados de um artigo. Várias vezes fui pego nesse tipo de situação, o que me fez questionar toda a parte de publicação de código. Depois de muito pensar, cheguei a uma solução parcial para esse problema.</p> <h2 id="o-principal-culpado">O principal culpado</h2> <p>Na maioria das vezes que eu não consigo executar o código de outra pessoa, é por causa de uma coisa: <strong>as versões das dependências não são especificadas</strong>.</p> <p>Claro, muitas pessoas criam algo como um <code class="language-plaintext highlighter-rouge">requirements.txt</code>, mas geralmente não têm os números das versões. Mesmo quando possuem número de versão, geralmente não é o número exato da versão. Por exemplo, em vez de <code class="language-plaintext highlighter-rouge">numpy==1.19.5</code>, está <code class="language-plaintext highlighter-rouge">numpy&gt;=1.19.5</code>. Isso não é suficiente. Se você quiser reproduzir os resultados de outra pessoa, você precisa saber <strong>exatamente</strong> qual versão de cada dependência você precisa instalar. Caso contrário, você obterá resultados diferentes. Mesmo se você especificar o número exato da versão, ainda poderá obter resultados diferentes se os autores usarem uma versão diferente da linguagem, digamos, Python, ou algumas outras dependências de baixo nível, como cuda ou cuDNN.</p> <h2 id="docker-pra-salvar-o-dia">Docker pra salvar o dia</h2> <p>É aí que entra o <a href="https://www.docker.com/">Docker</a>. O Docker é uma <a href="https://www.docker.com/resources/what-container/">tecnologia de conteinerização</a> que permite criar uma <a href="https://docs.docker.com/glossary/#image">imagem</a> que empacota todas as dependências necessárias para executar seu código. Você pode então executar seu código dentro de um <a href="https://docs.docker.com/glossary/#container">contêiner</a>, <strong>possivelmente</strong> obtendo os mesmos resultados que os autores. Fazendo uma alusão à programação orientada a objetos, <strong>imagem</strong> é a classe e <strong>contêiner</strong> é um objeto ou uma instância dessa classe. Você pode até compartilhar essa imagem com outras pessoas, para que elas também possam executar seu código. O Docker também suporta <a href="https://github.com/NVIDIA/nvidia-docker">executar código em GPUs</a>.</p> <p>Como exemplo, aqui está o <a href="https://github.com/george-gca/sr-pytorch-lightning">código base</a> que usei durante meu mestrado. Tentei ao máximo tornar o código reprodutível e extensível. Isso significa não apenas executar o modelo de IA, mas também poder criar seu próprio modelo e executá-lo com os mesmos dados e parâmetros de treinamento, para permitir comparações.</p> <p>Decidi dividir a lógica de lidar com o Docker (contido no <a href="https://github.com/george-gca/sr-pytorch-lightning/blob/main/Makefile">Makefile</a>) da execução do próprio código Python (contido no <a href="https://github.com/george-gca/sr-pytorch-lightning/blob/main/start_here.sh">start_here.sh</a>). A receita para criar a imagem do Docker está dentro do <a href="https://github.com/george-gca/sr-pytorch-lightning/blob/main/Dockerfile">Dockerfile</a>, e também disponibilizei um <a href="https://github.com/george-gca/sr-pytorch-lightning/blob/main/Dockerfile_fixed_versions">Dockerfile</a> com todas as versões das dependências definidas, como você pode ver no trecho de código abaixo. Tudo o que você pode precisar para executar o código é explicado no arquivo <a href="https://github.com/george-gca/sr-pytorch-lightning/blob/main/README.md">README</a>.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="nv">DEBIAN_FRONTEND</span><span class="o">=</span>noninteractive <span class="nv">$APT_INSTALL</span> <span class="se">\</span>
        <span class="nv">bc</span><span class="o">=</span>1.07.1-2 <span class="se">\</span>
        <span class="nv">curl</span><span class="o">=</span>7.58.0-2ubuntu3.18 <span class="se">\</span>
        <span class="nv">git</span><span class="o">=</span>1:2.17.1-1ubuntu0.11 <span class="se">\</span>
        libffi-dev<span class="o">=</span>3.2.1-8 <span class="se">\</span>
        <span class="nv">rsync</span><span class="o">=</span>3.1.2-2.1ubuntu1.4 <span class="se">\</span>
        <span class="nv">wget</span><span class="o">=</span>1.19.4-1ubuntu2.2 <span class="o">&amp;&amp;</span> <span class="se">\</span>

<span class="c"># ==================================================================</span>
<span class="c"># install python libraries via pip</span>
<span class="c"># ------------------------------------------------------------------</span>

    <span class="nv">$PIP_INSTALL</span> <span class="se">\</span>
        <span class="nv">pip</span><span class="o">==</span>22.0.4 <span class="se">\</span>
        <span class="nv">setuptools</span><span class="o">==</span>62.2.0 <span class="se">\</span>
        <span class="nv">wheel</span><span class="o">==</span>0.37.1 <span class="o">&amp;&amp;</span> <span class="se">\</span>
</code></pre></div></div> <p>Para garantir a reproducibilidade, apesar dos geradores de números aleatórios, usei a função <a href="https://pytorch-lightning.readthedocs.io/en/stable/api/pytorch_lightning.utilities.seed.html#pytorch_lightning.utilities.seed.seed_everything">seed_everything</a> do PyTorch Lightning. Essa função define a semente para geradores de números pseudo-aleatórios em: <code class="language-plaintext highlighter-rouge">pytorch</code>, <code class="language-plaintext highlighter-rouge">numpy</code>, <code class="language-plaintext highlighter-rouge">python.random</code>. Ele também define as seguintes variáveis de ambiente: <code class="language-plaintext highlighter-rouge">PL_GLOBAL_SEED</code> e <code class="language-plaintext highlighter-rouge">PL_SEED_WORKERS</code>.</p> <h2 id="o-docker-não-resolve-tudo">O Docker não resolve tudo</h2> <p>Como você provavelmente está pensando, essa não é uma solução perfeita. Ainda existem problemas que podem surgir e que você precisa estar ciente, pois alguns deles estão fora do nosso controle.</p> <h3 id="alterações-nos-repositórios">Alterações nos repositórios</h3> <p>Veja, por exemplo, essa parte do <a href="https://github.com/george-gca/sr-pytorch-lightning/blob/main/Dockerfile_fixed_versions">Dockerfile</a>:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># temporary solution for bug</span>
<span class="c"># see https://forums.developer.nvidia.com/t/gpg-error-http-developer-download-nvidia-com-compute-cuda-repos-ubuntu1804-x86-64/212904/3</span>
apt-key adv <span class="nt">--fetch-keys</span> https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64/3bf863cc.pub <span class="o">&amp;&amp;</span> <span class="se">\</span>
apt-key adv <span class="nt">--fetch-keys</span> https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/3bf863cc.pub <span class="o">&amp;&amp;</span> <span class="se">\</span>
</code></pre></div></div> <p>Esta é uma solução para um problema que encontrei no repositório da NVIDIA. Basicamente, eles estão (estavam?) em processo de rotação de suas chaves públicas GPG do repositório, que são usadas para assinar os pacotes. Isso estava causando um erro no comando <code class="language-plaintext highlighter-rouge">apt-get update</code> ao criar a imagem do Docker, e isso não estava acontecendo durante os meus experimentos, mas aconteceu quando eu decidi publicar o código.</p> <h3 id="dependências-de-dependências">Dependências de dependências</h3> <p>Às vezes, algumas versões específicas de dependências requerem versões específicas de suas próprias dependências. Isso aconteceu comigo ao especificar <code class="language-plaintext highlighter-rouge">tensorboard==2.9.0</code>, o que causou um erro ao construir a imagem do Docker. Para corrigir isso, eu precisava definir a versão apropriada do <code class="language-plaintext highlighter-rouge">protobuf</code> para instalar, mesmo meu código não usando o <code class="language-plaintext highlighter-rouge">protobuf</code> diretamente.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">prettytable</span><span class="o">==</span>3.3.0 <span class="se">\</span>
<span class="c"># specify protobuf to avoid bug with tensorboard</span>
<span class="c"># https://developers.google.com/protocol-buffers/docs/news/2022-05-06#python-updates</span>
<span class="nv">protobuf</span><span class="o">==</span>3.20 <span class="se">\</span>
pytorch-lightning<span class="o">==</span>1.6.3 <span class="se">\</span>
<span class="nv">tensorboard</span><span class="o">==</span>2.9.0 <span class="se">\</span>
</code></pre></div></div>]]></content><author><name></name></author><category term="research-code"/><category term="research"/><category term="programming"/><category term="reproducibility"/><category term="code"/><summary type="html"><![CDATA[Uma breve visão geral do problema da reproducibilidade de códigos de pesquisa.]]></summary></entry><entry><title type="html">Criando postagens de blog traduzidas</title><link href="https://george-gca.github.io/pt-br/blog/2022/localized-blog/" rel="alternate" type="text/html" title="Criando postagens de blog traduzidas"/><published>2022-09-30T17:40:13+00:00</published><updated>2022-09-30T17:40:13+00:00</updated><id>https://george-gca.github.io/blog/2022/localized-blog</id><content type="html" xml:base="https://george-gca.github.io/blog/2022/localized-blog/"><![CDATA[<p>Este post faz parte de uma série de posts que explicam como configurar seu próprio site baseado no tema al-folio e adicionar suporte a uma segunda língua:</p> <ul> <li><a href="/pt-br/blog/2022/running-local-al-folio/">Executando localmente seu próprio site al-folio</a></li> <li><a href="/pt-br/blog/2022/dual-language-al-folio/">Tornando seu al-folio em um site com dois idiomas</a></li> <li><a href="/pt-br/blog/2022/localized-cv/">Criando páginas de CV traduzidas</a></li> <li><a href="/pt-br/blog/2022/localized-projects/">Criando páginas de projetos traduzidas</a></li> <li>Criando postagens de blog traduzidas</li> </ul> <hr/> <p>Nós <a href="/pt-br/blog/2022/running-local-al-folio/">criamos um site al-folio local</a>, <a href="/pt-br/blog/2022/dual-language-al-folio/">adicionamos suporte para outro idioma nele</a>, <a href="/pt-br/blog/2022/localized-cv/">criamos páginas de CV</a> e <a href="/pt-br/blog/2022/localized-projects/">páginas de projetos</a> traduzidas. Agora, vamos traduzir a parte do blog.</p> <h2 id="criando-a-estrutura">Criando a estrutura</h2> <p>Se você for para a seção de blog do seu site al-folio, perceberá que ela está bastante vazia, embora haja postagens no modelo. Na verdade, o <a href="https://github.com/kurtsson/jekyll-multiple-languages-plugin">Jekyll Multiple Languages ​​Plugin</a> já suporta <a href="https://github.com/kurtsson/jekyll-multiple-languages-plugin#57-creating-posts">postagens de blog localizadas</a>. Ele só não está exibindo porque não está encontrando as postagens. Então, vamos criar a estrutura correta para eles. Crie um diretório <code class="language-plaintext highlighter-rouge">_posts/</code> dentro de cada idioma no diretório <code class="language-plaintext highlighter-rouge">_i18n/</code> e copie o conteúdo do diretório <code class="language-plaintext highlighter-rouge">_posts/</code> da raiz do site para os diretórios de idioma. Então, por exemplo, se você tiver um diretório <code class="language-plaintext highlighter-rouge">_posts/</code> com o seguinte conteúdo:</p> <ul> <li>_posts/2015-03-15-formatting-and-links.md</li> <li>_posts/2015-05-15-images.md</li> <li>_posts/2015-07-15-code.md</li> <li>_posts/2015-10-20-comments.md</li> <li>_posts/2015-10-20-math.md</li> <li>_posts/2018-12-22-distill.md</li> <li>_posts/2020-09-28-github-metadata.md</li> <li>_posts/2020-09-28-twitter.md</li> <li>_posts/2021-07-04-diagrams.md</li> <li>_posts/2022-02-01-redirect.md</li> </ul> <p>Você deve criar a seguinte estrutura para todos os seus idiomas, por exemplo, para o idioma inglês:</p> <ul> <li>_i18n/en/_posts/2015-03-15-formatting-and-links.md</li> <li>_i18n/en/_posts/2015-05-15-images.md</li> <li>_i18n/en/_posts/2015-07-15-code.md</li> <li>_i18n/en/_posts/2015-10-20-comments.md</li> <li>_i18n/en/_posts/2015-10-20-math.md</li> <li>_i18n/en/_posts/2018-12-22-distill.md</li> <li>_i18n/en/_posts/2020-09-28-github-metadata.md</li> <li>_i18n/en/_posts/2020-09-28-twitter.md</li> <li>_i18n/en/_posts/2021-07-04-diagrams.md</li> <li>_i18n/en/_posts/2022-02-01-redirect.md</li> </ul> <p>Crie isso, traduza o conteúdo das páginas e agora o modelo mostrará as postagens do blog. Fácil, certo? Ééééé, faltam dois pequenos detalhes: o formato da data e o tempo de leitura. A má notícia é que o Jekyll não oferece suporte nativo a formatos de data por idioma. A boa notícia é que não é tão difícil criar. Vamos começar com o formato da data.</p> <h2 id="traduzindo-o-formato-da-data">Traduzindo o formato da data</h2> <p>Existem dois formatos principais de data utilizados no template: na lista de posts e dentro dos posts, com o formato <code class="language-plaintext highlighter-rouge">28 de setembro, 2020</code>, e ao filtrar os posts (ex.: por tag), com o formato <code class="language-plaintext highlighter-rouge">28 de set, 2020</code>. A maneira mais fácil que encontrei de traduzi-los é primeiro traduzindo manualmente os nomes dos meses. Para isso, adicione a seguinte seção aos seus arquivos de idioma (<code class="language-plaintext highlighter-rouge">_i18n/en.yml</code> e <code class="language-plaintext highlighter-rouge">_i18n/pt-br.yml</code>), traduzindo os nomes dos meses para o seu idioma:</p> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">months</span><span class="pi">:</span>
  <span class="na">long</span><span class="pi">:</span>
    <span class="na">january</span><span class="pi">:</span> <span class="s">January</span>
    <span class="na">february</span><span class="pi">:</span> <span class="s">February</span>
    <span class="na">march</span><span class="pi">:</span> <span class="s">March</span>
    <span class="na">april</span><span class="pi">:</span> <span class="s">April</span>
    <span class="na">may</span><span class="pi">:</span> <span class="s">May</span>
    <span class="na">june</span><span class="pi">:</span> <span class="s">June</span>
    <span class="na">july</span><span class="pi">:</span> <span class="s">July</span>
    <span class="na">august</span><span class="pi">:</span> <span class="s">August</span>
    <span class="na">september</span><span class="pi">:</span> <span class="s">September</span>
    <span class="na">october</span><span class="pi">:</span> <span class="s">October</span>
    <span class="na">november</span><span class="pi">:</span> <span class="s">November</span>
    <span class="na">december</span><span class="pi">:</span> <span class="s">December</span>
  <span class="na">short</span><span class="pi">:</span>
    <span class="na">january</span><span class="pi">:</span> <span class="s">Jan</span>
    <span class="na">february</span><span class="pi">:</span> <span class="s">Feb</span>
    <span class="na">march</span><span class="pi">:</span> <span class="s">Mar</span>
    <span class="na">april</span><span class="pi">:</span> <span class="s">Apr</span>
    <span class="na">may</span><span class="pi">:</span> <span class="s">May</span>
    <span class="na">june</span><span class="pi">:</span> <span class="s">Jun</span>
    <span class="na">july</span><span class="pi">:</span> <span class="s">Jul</span>
    <span class="na">august</span><span class="pi">:</span> <span class="s">Aug</span>
    <span class="na">september</span><span class="pi">:</span> <span class="s">Sep</span>
    <span class="na">october</span><span class="pi">:</span> <span class="s">Oct</span>
    <span class="na">november</span><span class="pi">:</span> <span class="s">Nov</span>
    <span class="na">december</span><span class="pi">:</span> <span class="s">Dec</span>
</code></pre></div></div> <p>Como as datas são usadas em vários locais, vamos criar uma função para reutilizar o código. Crie o arquivo <code class="language-plaintext highlighter-rouge">_includes/date_format.html</code> com o seguinte código:</p> <div class="language-liquid highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">{%</span><span class="w"> </span><span class="nt">assign</span><span class="w"> </span><span class="nv">months</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">'january|february|march|april|may|june|july|august|september|october|november|december'</span><span class="w"> </span><span class="p">|</span><span class="w"> </span><span class="nf">split</span><span class="p">:</span><span class="w"> </span><span class="s1">'|'</span><span class="w"> </span><span class="cp">%}</span>
<span class="cp">{%</span><span class="w"> </span><span class="nt">assign</span><span class="w"> </span><span class="nv">m</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nv">include</span><span class="p">.</span><span class="nv">date_from</span><span class="p">.</span><span class="nv">date</span><span class="w"> </span><span class="p">|</span><span class="w"> </span><span class="nf">date</span><span class="p">:</span><span class="w"> </span><span class="s1">'%-m'</span><span class="w"> </span><span class="p">|</span><span class="w"> </span><span class="nf">minus</span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="cp">%}</span>
<span class="cp">{%</span><span class="w"> </span><span class="nt">assign</span><span class="w"> </span><span class="nv">day</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nv">include</span><span class="p">.</span><span class="nv">date_from</span><span class="p">.</span><span class="nv">date</span><span class="w"> </span><span class="p">|</span><span class="w"> </span><span class="nf">date</span><span class="p">:</span><span class="w"> </span><span class="s1">'%d'</span><span class="w"> </span><span class="cp">%}</span>
<span class="cp">{%</span><span class="w"> </span><span class="nt">capture</span><span class="w"> </span><span class="nv">month</span><span class="w"> </span><span class="cp">%}</span>months.<span class="cp">{{</span><span class="w"> </span><span class="nv">include</span><span class="p">.</span><span class="nv">format</span><span class="w"> </span><span class="cp">}}</span>.<span class="cp">{{</span><span class="w"> </span><span class="nv">months</span><span class="p">[</span><span class="nv">m</span><span class="p">]</span><span class="w"> </span><span class="cp">}}{%</span><span class="w"> </span><span class="nt">endcapture</span><span class="w"> </span><span class="cp">%}</span>
<span class="cp">{%</span><span class="w"> </span><span class="nt">assign</span><span class="w"> </span><span class="nv">year</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nv">include</span><span class="p">.</span><span class="nv">date_from</span><span class="p">.</span><span class="nv">date</span><span class="w"> </span><span class="p">|</span><span class="w"> </span><span class="nf">date</span><span class="p">:</span><span class="w"> </span><span class="s1">'%Y'</span><span class="w"> </span><span class="cp">%}</span>
<span class="cp">{%</span><span class="w"> </span><span class="nt">if</span><span class="w"> </span><span class="nv">site</span><span class="p">.</span><span class="nv">lang</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s1">'en'</span><span class="w"> </span><span class="cp">-%}</span>
  <span class="cp">{%-</span><span class="w"> </span><span class="nt">t</span><span class="w"> </span><span class="nv">month</span><span class="w"> </span><span class="cp">%}</span>
  <span class="cp">{{</span><span class="w"> </span><span class="nv">day</span><span class="w"> </span><span class="cp">}}</span>, <span class="cp">{{</span><span class="w"> </span><span class="nv">year</span><span class="w"> </span><span class="cp">-}}</span>
<span class="cp">{%-</span><span class="w"> </span><span class="nt">else</span><span class="w"> </span><span class="cp">-%}</span>
  <span class="cp">{{-</span><span class="w"> </span><span class="nv">day</span><span class="w"> </span><span class="cp">}}</span> de <span class="cp">{%</span><span class="w"> </span><span class="nt">t</span><span class="w"> </span><span class="nv">month</span><span class="w"> </span><span class="cp">%}</span>, <span class="cp">{{</span><span class="w"> </span><span class="nv">year</span><span class="w"> </span><span class="cp">-}}</span>
<span class="cp">{%-</span><span class="w"> </span><span class="nt">endif</span><span class="w"> </span><span class="cp">%}</span>
</code></pre></div></div> <p>Este código define uma função que extrai o mês, dia e ano da variável <code class="language-plaintext highlighter-rouge">date_from</code>, formata de acordo com <code class="language-plaintext highlighter-rouge">format</code> e retorna a string traduzida formatada. Observe que, para acessar as variáveis fornecidas, devemos nos referir a elas precedidas de <code class="language-plaintext highlighter-rouge">include.</code>. A variável <code class="language-plaintext highlighter-rouge">format</code> pode ser <code class="language-plaintext highlighter-rouge">long</code> ou <code class="language-plaintext highlighter-rouge">short</code>, como definimos acima, e a variável <code class="language-plaintext highlighter-rouge">date_from</code> deve ter um objeto de data dentro dela. A função também considera o idioma atual. Agora, vamos chamar a função com os parâmetros apropriados. Dentro do arquivo <code class="language-plaintext highlighter-rouge">blog/index.html</code>, faça as seguintes alterações:</p> <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- {{ post.date | date: '%B %-d, %Y' }} --&gt;</span>
{% include date_format.html format="long" date_from=post %}
</code></pre></div></div> <p>A lista de postagens agora exibirá o formato de data corretamente. Basta fazer as mesmas alterações para todos os outros lugares onde o formato da data aparece, como as páginas de filtros, alterando o formato do mês para <code class="language-plaintext highlighter-rouge">"short"</code> quando necessário, e também fornecendo o parâmetro <code class="language-plaintext highlighter-rouge">date_from</code> correto. Por exemplo, para o arquivo <code class="language-plaintext highlighter-rouge">_layouts/archive-category.html</code> a mudança será:</p> <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- &lt;th scope="row"&gt;{{ post.date | date: "%b %-d, %Y" }}&lt;/th&gt; --&gt;</span>
<span class="nt">&lt;th</span> <span class="na">scope=</span><span class="s">"row"</span><span class="nt">&gt;</span>{% include date_format.html format="short" date_from=post %}<span class="nt">&lt;/th&gt;</span>
</code></pre></div></div> <h2 id="traduzindo-o-tempo-de-leitura">Traduzindo o tempo de leitura</h2> <p>Agora, vamos traduzir o tempo de leitura. Faça as seguintes alterações no arquivo <code class="language-plaintext highlighter-rouge">blog/index.html</code>:</p> <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- {{ read_time }} min read &amp;nbsp; &amp;middot; &amp;nbsp; --&gt;</span>
{% if site.lang == 'en' %}{{ read_time }} min read{% else %}Leitura de {{ read_time }} min{% endif %} <span class="ni">&amp;nbsp;</span> <span class="ni">&amp;middot;</span> <span class="ni">&amp;nbsp;</span>
</code></pre></div></div> <h2 id="corrigindo-a-navegação-nos-arquivos-do-blog">Corrigindo a navegação nos arquivos do blog</h2> <p>Ao clicar para filtrar as postagens do blog por tag, ano ou categoria, a página mostra as postagens, mas a navegação não funciona como deveria. Isso ocorre porque essas navegações ainda não dão suporte à tradução. Para corrigir isso, modifique as seguintes linhas nos arquivos <code class="language-plaintext highlighter-rouge">_layouts/archive-category.html</code>, <code class="language-plaintext highlighter-rouge">_layouts/archive-tag.html</code> e <code class="language-plaintext highlighter-rouge">_layouts/archive-year.html</code>:</p> <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- &lt;a class="post-link" href="{{ post.url | relative_url }}"&gt;{{ post.title }}&lt;/a&gt; --&gt;</span>
<span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">"post-link"</span> <span class="na">href=</span><span class="s">"{{ post.url | prepend: site.baseurl }}"</span><span class="nt">&gt;</span>{{ post.title }}<span class="nt">&lt;/a&gt;</span>
</code></pre></div></div> <p>Também mude a seguinte linha no arquivo <code class="language-plaintext highlighter-rouge">blog/index.html</code>:</p> <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- &lt;i class="fas fa-hashtag fa-sm"&gt;&lt;/i&gt; &lt;a href="{{ tag | prepend: '/blog/tag/' | relative_url }}"&gt;{{ tag }}&lt;/a&gt; --&gt;</span>
<span class="nt">&lt;i</span> <span class="na">class=</span><span class="s">"fas fa-hashtag fa-sm"</span><span class="nt">&gt;&lt;/i&gt;</span> <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"{{ tag | prepend: '/blog/tag/' | prepend: site.baseurl }}"</span><span class="nt">&gt;</span>{{ tag }}<span class="nt">&lt;/a&gt;</span>
</code></pre></div></div> <h2 id="corrigindo-a-paginação">Corrigindo a paginação</h2> <p>Se o seu blog tiver postagens suficientes para habilitar mais páginas com resultados (paginação), você perceberá que isso ainda não está traduzido. Para corrigir, primeiro precisamos criar traduções para os termos <code class="language-plaintext highlighter-rouge">Older</code> e <code class="language-plaintext highlighter-rouge">Newer</code> nos arquivos de idioma <code class="language-plaintext highlighter-rouge">_i18n/en.yml</code> e <code class="language-plaintext highlighter-rouge">_i18n/pt-br.yml</code>, respectivamente:</p> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">pagination</span><span class="pi">:</span>
  <span class="na">newer</span><span class="pi">:</span> <span class="s">Newer</span>
  <span class="na">older</span><span class="pi">:</span> <span class="s">Older</span>
</code></pre></div></div> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">pagination</span><span class="pi">:</span>
  <span class="na">newer</span><span class="pi">:</span> <span class="s">Recentes</span>
  <span class="na">older</span><span class="pi">:</span> <span class="s">Antigas</span>
</code></pre></div></div> <p>Em seguida, mudamos todos os usos de <code class="language-plaintext highlighter-rouge">relative_url</code> para <code class="language-plaintext highlighter-rouge">prepend: site.baseurl</code> no arquivo <code class="language-plaintext highlighter-rouge">_includes/pagination.html</code>, para que ele lide com as URLs no idioma correto. Além disso, substitua as palavras “Newer” e “Older” pela sua tradução correspondente do arquivo de idioma:</p> <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{%- if paginator.total_pages &gt; 1 -%}
<span class="nt">&lt;nav</span> <span class="na">aria-label=</span><span class="s">"Blog page naviation"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;ul</span> <span class="na">class=</span><span class="s">"pagination pagination-lg justify-content-center"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">"page-item {% unless paginator.previous_page %}disabled{% endunless %}"</span><span class="nt">&gt;</span>
      <span class="c">&lt;!-- &lt;a class="page-link" href="{{ paginator.previous_page_path | relative_url }}" tabindex="-1" aria-disabled="{{ paginator.previous_page }}"&gt;Newer&lt;/a&gt; --&gt;</span>
      <span class="nt">&lt;a</span>
        <span class="na">class=</span><span class="s">"page-link"</span>
        <span class="na">href=</span><span class="s">"{{ paginator.previous_page_path |  prepend: site.baseurl }}"</span>
        <span class="na">tabindex=</span><span class="s">"-1"</span>
        <span class="na">aria-disabled=</span><span class="s">"{{ paginator.previous_page }}"</span>
        <span class="nt">&gt;</span>{% t pagination.newer %}<span class="nt">&lt;/a</span>
      <span class="nt">&gt;</span>
    <span class="nt">&lt;/li&gt;</span>
    {%- if paginator.page_trail -%} {% for trail in paginator.page_trail -%}
    <span class="c">&lt;!-- &lt;li class="page-item {% if page.url == trail.path %}active{% endif %}"&gt;&lt;a class="page-link" href="{{ trail.path | relative_url }}" title="{{trail.title}}"&gt;{{ trail.num }}&lt;/a&gt;&lt;/li&gt; --&gt;</span>
    <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">"page-item {% if page.url == trail.path %}active{% endif %}"</span><span class="nt">&gt;</span>
      <span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">"page-link"</span> <span class="na">href=</span><span class="s">"{{ trail.path | prepend: site.baseurl }}"</span> <span class="na">title=</span><span class="s">"{{trail.title}}"</span><span class="nt">&gt;</span>{{ trail.num }}<span class="nt">&lt;/a&gt;</span>
    <span class="nt">&lt;/li&gt;</span>
    {% endfor -%} {%- endif -%}
    <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">"page-item {% unless paginator.next_page %}disabled{% endunless %}"</span><span class="nt">&gt;</span>
      <span class="c">&lt;!-- &lt;a class="page-link" href="{{ paginator.next_page_path | relative_url }}"&gt;Older&lt;/a&gt; --&gt;</span>
      <span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">"page-link"</span> <span class="na">href=</span><span class="s">"{{ paginator.next_page_path | prepend: site.baseurl }}"</span><span class="nt">&gt;</span>{% t pagination.older %}<span class="nt">&lt;/a&gt;</span>
    <span class="nt">&lt;/li&gt;</span>
  <span class="nt">&lt;/ul&gt;</span>
<span class="nt">&lt;/nav&gt;</span>
{%- endif -%}
</code></pre></div></div> <h2 id="corrigindo-o-título-da-página-no-navegador">Corrigindo o título da página no navegador</h2> <p>Se você filtrar as postagens do seu blog por ano, notará que o ano não é exibido no título do navegador. Para corrigir isso, modifique as seguintes linhas no arquivo <code class="language-plaintext highlighter-rouge">_includes/metadata.html</code>:</p> <div class="language-liquid highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">{%</span><span class="w"> </span><span class="nt">if</span><span class="w"> </span><span class="nv">page</span><span class="p">.</span><span class="nv">url</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s1">'/blog/index.html'</span><span class="w"> </span><span class="cp">%}</span>
  <span class="cp">{{</span><span class="w"> </span><span class="nv">site</span><span class="p">.</span><span class="nv">blog_nav_title</span><span class="w"> </span><span class="cp">}}</span> | <span class="cp">{{</span><span class="w"> </span><span class="nv">title</span><span class="w"> </span><span class="cp">}}</span>
<span class="cp">{%</span><span class="w"> </span><span class="nt">elsif</span><span class="w"> </span><span class="nv">page</span><span class="p">.</span><span class="nv">url</span><span class="w"> </span><span class="ow">contains</span><span class="w"> </span><span class="s1">'/blog/'</span><span class="w"> </span><span class="cp">%}</span>
  <span class="cp">{{</span><span class="w"> </span><span class="nv">page</span><span class="p">.</span><span class="nv">title</span><span class="w"> </span><span class="cp">}}</span> | <span class="cp">{{</span><span class="w"> </span><span class="nv">title</span><span class="w"> </span><span class="cp">}}</span>
<span class="cp">{%-</span><span class="w"> </span><span class="nt">elsif</span><span class="w"> </span><span class="nv">page</span><span class="p">.</span><span class="nv">title</span><span class="w"> </span><span class="ow">contains</span><span class="w"> </span><span class="s1">'Announcement'</span><span class="w"> </span><span class="cp">-%}</span>
  <span class="cp">{{</span><span class="w"> </span><span class="nv">title</span><span class="w"> </span><span class="cp">}}</span>
<span class="cp">{%-</span><span class="w"> </span><span class="nt">elsif</span><span class="w"> </span><span class="nv">page</span><span class="p">.</span><span class="nv">title</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="s1">'blank'</span><span class="w"> </span><span class="ow">and</span><span class="w"> </span><span class="nv">page</span><span class="p">.</span><span class="nv">url</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="s1">'/'</span><span class="w"> </span><span class="cp">-%}</span>
  <span class="cp">{%</span><span class="w"> </span><span class="nt">t</span><span class="w"> </span><span class="nv">page</span><span class="p">.</span><span class="nv">title</span><span class="w"> </span><span class="cp">%}</span> | <span class="cp">{{</span><span class="w"> </span><span class="nv">title</span><span class="w"> </span><span class="cp">}}</span>
<span class="cp">{%-</span><span class="w"> </span><span class="nt">else</span><span class="w"> </span><span class="cp">-%}</span>
  <span class="cp">{{</span><span class="w"> </span><span class="nv">title</span><span class="w"> </span><span class="cp">}}</span>
<span class="cp">{%-</span><span class="w"> </span><span class="nt">endif</span><span class="w"> </span><span class="cp">-%}</span>
</code></pre></div></div> <p>por essas:</p> <div class="language-liquid highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">{%</span><span class="w"> </span><span class="nt">if</span><span class="w"> </span><span class="nv">page</span><span class="p">.</span><span class="nv">url</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s1">'/blog/index.html'</span><span class="w"> </span><span class="cp">%}</span>
  <span class="cp">{{</span><span class="w"> </span><span class="nv">site</span><span class="p">.</span><span class="nv">blog_nav_title</span><span class="w"> </span><span class="cp">}}</span> | <span class="cp">{{</span><span class="w"> </span><span class="nv">title</span><span class="w"> </span><span class="cp">}}</span>
<span class="cp">{%</span><span class="w"> </span><span class="nt">elsif</span><span class="w"> </span><span class="nv">page</span><span class="p">.</span><span class="nv">url</span><span class="w"> </span><span class="ow">contains</span><span class="w"> </span><span class="s1">'/blog/'</span><span class="w"> </span><span class="cp">%}</span>
  <span class="cp">{%-</span><span class="w"> </span><span class="nt">capture</span><span class="w"> </span><span class="nv">blog_year</span><span class="w"> </span><span class="cp">-%}{{</span><span class="w"> </span><span class="nv">page</span><span class="p">.</span><span class="nv">url</span><span class="w"> </span><span class="p">|</span><span class="w"> </span><span class="nf">slice</span><span class="p">:</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w"> </span><span class="mi">11</span><span class="w"> </span><span class="cp">}}{%-</span><span class="w"> </span><span class="nt">endcapture</span><span class="w"> </span><span class="cp">-%}</span>
  <span class="cp">{%-</span><span class="w"> </span><span class="nt">if</span><span class="w"> </span><span class="nv">page</span><span class="p">.</span><span class="nv">url</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="nv">blog_year</span><span class="w"> </span><span class="cp">-%}</span>
    <span class="cp">{{</span><span class="w"> </span><span class="nv">page</span><span class="p">.</span><span class="nv">date</span><span class="w"> </span><span class="p">|</span><span class="w"> </span><span class="nf">date</span><span class="p">:</span><span class="w"> </span><span class="s1">'%Y'</span><span class="w"> </span><span class="cp">}}</span> | <span class="cp">{{</span><span class="w"> </span><span class="nv">title</span><span class="w"> </span><span class="cp">}}</span>
  <span class="cp">{%-</span><span class="w"> </span><span class="nt">else</span><span class="w"> </span><span class="cp">-%}</span>
    <span class="cp">{{</span><span class="w"> </span><span class="nv">page</span><span class="p">.</span><span class="nv">title</span><span class="w"> </span><span class="cp">}}</span> | <span class="cp">{{</span><span class="w"> </span><span class="nv">title</span><span class="w"> </span><span class="cp">}}</span>
  <span class="cp">{%-</span><span class="w"> </span><span class="nt">endif</span><span class="w"> </span><span class="cp">-%}</span>
<span class="cp">{%-</span><span class="w"> </span><span class="nt">elsif</span><span class="w"> </span><span class="nv">page</span><span class="p">.</span><span class="nv">title</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="s1">'blank'</span><span class="w"> </span><span class="ow">and</span><span class="w"> </span><span class="nv">page</span><span class="p">.</span><span class="nv">url</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="s1">'/'</span><span class="w"> </span><span class="cp">-%}</span>
  <span class="cp">{%-</span><span class="w"> </span><span class="nt">if</span><span class="w"> </span><span class="nv">page</span><span class="p">.</span><span class="nv">title</span><span class="w"> </span><span class="ow">contains</span><span class="w"> </span><span class="s1">'Announcement'</span><span class="w"> </span><span class="cp">-%}</span>
    <span class="cp">{{</span><span class="w"> </span><span class="nv">title</span><span class="w"> </span><span class="cp">}}</span>
  <span class="cp">{%-</span><span class="w"> </span><span class="nt">else</span><span class="w"> </span><span class="cp">-%}</span>
    <span class="cp">{%</span><span class="w"> </span><span class="nt">t</span><span class="w"> </span><span class="nv">page</span><span class="p">.</span><span class="nv">title</span><span class="w"> </span><span class="cp">%}</span> | <span class="cp">{{</span><span class="w"> </span><span class="nv">title</span><span class="w"> </span><span class="cp">}}</span>
  <span class="cp">{%-</span><span class="w"> </span><span class="nt">endif</span><span class="w"> </span><span class="cp">-%}</span>
<span class="cp">{%-</span><span class="w"> </span><span class="nt">else</span><span class="w"> </span><span class="cp">-%}</span>
  <span class="cp">{{</span><span class="w"> </span><span class="nv">title</span><span class="w"> </span><span class="cp">}}</span>
<span class="cp">{%-</span><span class="w"> </span><span class="nt">endif</span><span class="w"> </span><span class="cp">-%}</span>
</code></pre></div></div>]]></content><author><name></name></author><category term="website"/><category term="development"/><category term="al-folio"/><category term="website"/><category term="jekyll"/><category term="localization"/><category term="languages"/><summary type="html"><![CDATA[Como criar um blog traduzido no seu site al-folio.]]></summary></entry><entry><title type="html">Criando páginas de projetos traduzidas</title><link href="https://george-gca.github.io/pt-br/blog/2022/localized-projects/" rel="alternate" type="text/html" title="Criando páginas de projetos traduzidas"/><published>2022-09-30T11:57:13+00:00</published><updated>2022-09-30T11:57:13+00:00</updated><id>https://george-gca.github.io/blog/2022/localized-projects</id><content type="html" xml:base="https://george-gca.github.io/blog/2022/localized-projects/"><![CDATA[<p>Este post faz parte de uma série de posts que explicam como configurar seu próprio site baseado no tema al-folio e adicionar suporte a uma segunda língua:</p> <ul> <li><a href="/pt-br/blog/2022/running-local-al-folio/">Executando localmente seu próprio site al-folio</a></li> <li><a href="/pt-br/blog/2022/dual-language-al-folio/">Tornando seu al-folio em um site com dois idiomas</a></li> <li><a href="/pt-br/blog/2022/localized-cv/">Criando páginas de CV traduzidas</a></li> <li>Criando páginas de projetos traduzidas</li> <li><a href="/pt-br/blog/2022/localized-blog/">Criando postagens de blog traduzidas</a></li> </ul> <hr/> <p>Nós <a href="/pt-br/blog/2022/running-local-al-folio/">criamos um site al-folio local</a>, <a href="/pt-br/blog/2022/dual-language-al-folio/">adicionamos suporte para outro idioma nele</a> e <a href="/pt-br/blog/2022/localized-cv/">criamos páginas de CV traduzidas</a>. Agora, vamos criar a versão traduzida da página Projetos.</p> <h2 id="traduzindo-as-descrições-das-páginas">Traduzindo as descrições das páginas</h2> <p>Vamos primeiro localizar todas as descrições das páginas. Isso começará com a criação das chaves nos arquivos <code class="language-plaintext highlighter-rouge">_i18n/en.yml</code> e <code class="language-plaintext highlighter-rouge">_i18n/pt-br.yml</code>, e movendo para lá o conteúdo referido das páginas. Então, vamos começar criando as descrições tanto na raiz do arquivo quanto dentro da chave <code class="language-plaintext highlighter-rouge">projects</code>. O novo conteúdo do arquivo <code class="language-plaintext highlighter-rouge">_i18n/en.yml</code> será:</p> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">titles</span><span class="pi">:</span>
  <span class="na">about</span><span class="pi">:</span> <span class="s">about</span>
  <span class="na">blog</span><span class="pi">:</span> <span class="s">blog</span>
  <span class="na">cv</span><span class="pi">:</span> <span class="s">cv</span>
  <span class="na">news</span><span class="pi">:</span> <span class="s">news</span>
  <span class="na">projects</span><span class="pi">:</span> <span class="s">projects</span>
  <span class="na">publications</span><span class="pi">:</span> <span class="s">publications</span>
  <span class="na">repositories</span><span class="pi">:</span> <span class="s">repositories</span>
  <span class="na">teaching</span><span class="pi">:</span> <span class="s">teaching</span>
  <span class="na">submenus</span><span class="pi">:</span> <span class="s">submenus</span>
  <span class="na">unk</span><span class="pi">:</span> <span class="s">page not found</span>
<span class="na">descriptions</span><span class="pi">:</span>
  <span class="na">about</span><span class="pi">:</span> <span class="s">about me</span>
  <span class="na">blog</span><span class="pi">:</span> <span class="s">blogging</span>
  <span class="na">publications</span><span class="pi">:</span> <span class="s">publications by categories in reversed chronological order. generated by jekyll-scholar.</span>
  <span class="na">projects</span><span class="pi">:</span> <span class="s">A growing collection of your cool projects.</span>
  <span class="na">repositories</span><span class="pi">:</span> <span class="s">Edit the `_data/repositories.yml` and change the `github_users` and `github_repos` lists to include your own GitHub profile and repositories.</span>
  <span class="na">teaching</span><span class="pi">:</span> <span class="s">Materials for courses you taught. Replace this text with your description.</span>
  <span class="na">unk</span><span class="pi">:</span> <span class="s">Looks like there has been a mistake. Nothing exists here.</span>
<span class="na">projects</span><span class="pi">:</span>
  <span class="na">titles</span><span class="pi">:</span>
    <span class="na">project1</span><span class="pi">:</span> <span class="s">Project </span><span class="m">1</span>
    <span class="na">project2</span><span class="pi">:</span> <span class="s">Project </span><span class="m">2</span>
    <span class="na">project3</span><span class="pi">:</span> <span class="s">Project </span><span class="m">3</span>
    <span class="na">project4</span><span class="pi">:</span> <span class="s">Project </span><span class="m">4</span>
    <span class="na">project5</span><span class="pi">:</span> <span class="s">Project </span><span class="m">5</span>
    <span class="na">project6</span><span class="pi">:</span> <span class="s">Project </span><span class="m">6</span>
  <span class="na">descriptions</span><span class="pi">:</span>
    <span class="na">project1</span><span class="pi">:</span> <span class="s">a project with a background image</span>
    <span class="na">project2</span><span class="pi">:</span> <span class="s">a project with a background image</span>
    <span class="na">project3</span><span class="pi">:</span> <span class="s">a project that redirects to another website</span>
    <span class="na">project4</span><span class="pi">:</span> <span class="s">another without an image</span>
    <span class="na">project5</span><span class="pi">:</span> <span class="s">a project with a background image</span>
    <span class="na">project6</span><span class="pi">:</span> <span class="s">a project with no image</span>
</code></pre></div></div> <p>E para o <code class="language-plaintext highlighter-rouge">_i18n/pt-br.yml</code>:</p> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">titles</span><span class="pi">:</span>
  <span class="na">about</span><span class="pi">:</span> <span class="s">sobre</span>
  <span class="na">blog</span><span class="pi">:</span> <span class="s">blog</span>
  <span class="na">cv</span><span class="pi">:</span> <span class="s">cv</span>
  <span class="na">news</span><span class="pi">:</span> <span class="s">novidades</span>
  <span class="na">projects</span><span class="pi">:</span> <span class="s">projetos</span>
  <span class="na">publications</span><span class="pi">:</span> <span class="s">publicações</span>
  <span class="na">repositories</span><span class="pi">:</span> <span class="s">repositórios</span>
  <span class="na">teaching</span><span class="pi">:</span> <span class="s">ensino</span>
  <span class="na">submenus</span><span class="pi">:</span> <span class="s">submenus</span>
  <span class="na">unk</span><span class="pi">:</span> <span class="s">página não encontrada</span>
<span class="na">descriptions</span><span class="pi">:</span>
  <span class="na">about</span><span class="pi">:</span> <span class="s">sobre</span>
  <span class="na">blog</span><span class="pi">:</span> <span class="s">blogging</span>
  <span class="na">publications</span><span class="pi">:</span> <span class="s">publicações por categoria em ordem cronológica reversa. gerado pelo jekyll-scholar.</span>
  <span class="na">projects</span><span class="pi">:</span> <span class="s">Uma crescente coleção de seus projetos interessantes.</span>
  <span class="na">repositories</span><span class="pi">:</span> <span class="s">Edite o `_data/repositories.yml` e mude as listas `github_users` e `github_repos` para incluir seu próprio perfil do GitHub e repositórios.</span>
  <span class="na">teaching</span><span class="pi">:</span> <span class="s">Materiais de cursos que você ministrou. Substitua esse texto com sua descrição.</span>
  <span class="na">unk</span><span class="pi">:</span> <span class="s">Parece que ocorreu um erro. Não existe nada aqui.</span>
<span class="na">projects</span><span class="pi">:</span>
  <span class="na">titles</span><span class="pi">:</span>
    <span class="na">project1</span><span class="pi">:</span> <span class="s">Projeto </span><span class="m">1</span>
    <span class="na">project2</span><span class="pi">:</span> <span class="s">Projeto </span><span class="m">2</span>
    <span class="na">project3</span><span class="pi">:</span> <span class="s">Projeto </span><span class="m">3</span>
    <span class="na">project4</span><span class="pi">:</span> <span class="s">Projeto </span><span class="m">4</span>
    <span class="na">project5</span><span class="pi">:</span> <span class="s">Projeto </span><span class="m">5</span>
    <span class="na">project6</span><span class="pi">:</span> <span class="s">Projeto </span><span class="m">6</span>
  <span class="na">descriptions</span><span class="pi">:</span>
    <span class="na">project1</span><span class="pi">:</span> <span class="s">um projeto com imagem de fundo</span>
    <span class="na">project2</span><span class="pi">:</span> <span class="s">um projeto com imagem de fundo</span>
    <span class="na">project3</span><span class="pi">:</span> <span class="s">um projeto que redireciona pra outro website</span>
    <span class="na">project4</span><span class="pi">:</span> <span class="s">outro sem imagem</span>
    <span class="na">project5</span><span class="pi">:</span> <span class="s">um projeto com imagem de fundo</span>
    <span class="na">project6</span><span class="pi">:</span> <span class="s">um projeto sem imagem</span>
</code></pre></div></div> <p>Em seguida, atualize todas as páginas para usar as novas chaves. Essas são: <code class="language-plaintext highlighter-rouge">404.html</code>, <code class="language-plaintext highlighter-rouge">_pages/projects.md</code>, <code class="language-plaintext highlighter-rouge">_pages/publications.md</code>, <code class="language-plaintext highlighter-rouge">_pages/repositories.md</code>, <code class="language-plaintext highlighter-rouge">_pages/teaching.md</code>, e todos os projetos dentro do diretório <code class="language-plaintext highlighter-rouge">_projects/</code>. Por exemplo, a nova descrição em <code class="language-plaintext highlighter-rouge">404.html</code> será:</p> <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>description: descriptions.unk
</code></pre></div></div> <p>e em <code class="language-plaintext highlighter-rouge">_projects/1_project.md</code>:</p> <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>description: projects.descriptions.project1
</code></pre></div></div> <p>Além disso, atualize o <code class="language-plaintext highlighter-rouge">_layouts/cv.html</code> e <code class="language-plaintext highlighter-rouge">_layouts/page.html</code> para exibir apenas a descrição da tradução se uma descrição for definida no arquivo markdown. O novo <code class="language-plaintext highlighter-rouge">_layouts/page.html</code> terá:</p> <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- &lt;p class="post-description"&gt;{{ page.description }}&lt;/p&gt; --&gt;</span>
<span class="nt">&lt;p</span> <span class="na">class=</span><span class="s">"post-description"</span><span class="nt">&gt;</span>{% if page.description %}{% t page.description %}{% endif %}<span class="nt">&lt;/p&gt;</span>
</code></pre></div></div> <p>Agora as descrições também devem aparecer traduzidas. Os títulos e as descrições dos projetos quando um projeto é aberto também devem estar traduzidos, mas não na página de visão geral dos projetos. Então, vamos corrigir isso.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/blog/2022-09-30-localized-projects/not_localized_projects_overview-480.webp 480w,/assets/img/blog/2022-09-30-localized-projects/not_localized_projects_overview-800.webp 800w,/assets/img/blog/2022-09-30-localized-projects/not_localized_projects_overview-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/blog/2022-09-30-localized-projects/not_localized_projects_overview.png" class="img-fluid rounded z-depth-1 mx-auto d-block" width="100%" height="auto" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <div class="caption"> A visão geral dos projetos ainda não está funcionando. </div> <h2 id="traduzindo-a-visão-geral-dos-projetos">Traduzindo a visão geral dos projetos</h2> <p>Quando você abre o arquivo <code class="language-plaintext highlighter-rouge">_pages/projects.md</code>, percebe que ele possui mais código do que um arquivo markdown normal. Os autores decidiram chamar aqui o código html para construir o layout principal da página de visão geral. As partes interessantes são estas:</p> <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{% if page.horizontal -%}
<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"container"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"row row-cols-2"</span><span class="nt">&gt;</span>{%- for project in sorted_projects -%} {% include projects_horizontal.html %} {%- endfor %}<span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/div&gt;</span>
{%- else -%}
<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"grid"</span><span class="nt">&gt;</span>{%- for project in sorted_projects -%} {% include projects.html %} {%- endfor %}<span class="nt">&lt;/div&gt;</span>
{%- endif -%}
</code></pre></div></div> <p>Essas partes significam que há um layout horizontal e vertical para a página de visão geral dos projetos. O layout horizontal é usado quando o atributo <code class="language-plaintext highlighter-rouge">horizontal</code> é definido como <code class="language-plaintext highlighter-rouge">true</code> no cabeçalho desta página, e o vertical, caso contrário. Esses layouts podem ser encontrados em <code class="language-plaintext highlighter-rouge">_includes/projects_horizontal.html</code> e <code class="language-plaintext highlighter-rouge">_includes/projects.html</code>, respectivamente. Esses são os arquivos que precisamos atualizar para traduzir a página de visão geral dos projetos. As mudanças serão basicamente as mesmas nos dois arquivos: precisamos adicionar a tag <code class="language-plaintext highlighter-rouge">t</code> aos títulos e descrições dos projetos, e também atualizar corretamente os links para eles. As mudanças no <code class="language-plaintext highlighter-rouge">_includes/projects_horizontal.html</code> serão:</p> <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- &lt;a href="{{ project.url | relative_url }}"&gt; --&gt;</span>
<span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"{{ project.url | prepend: site.baseurl }}"</span><span class="nt">&gt;</span>
  <span class="c">&lt;!-- &lt;h3 class="card-title text-lowercase"&gt;{{ project.title }}&lt;/h3&gt;
&lt;p class="card-text"&gt;{{ project.description }}&lt;/p&gt; --&gt;</span>

  <span class="nt">&lt;h3</span> <span class="na">class=</span><span class="s">"card-title text-lowercase"</span><span class="nt">&gt;</span>{% t project.title %}<span class="nt">&lt;/h3&gt;</span>
  <span class="nt">&lt;p</span> <span class="na">class=</span><span class="s">"card-text"</span><span class="nt">&gt;</span>{% t project.description %}<span class="nt">&lt;/p&gt;&lt;/a</span>
<span class="nt">&gt;</span>
</code></pre></div></div> <p>Agora, a visão geral dos projetos é exibida corretamente. Mas, se você olhar de perto, notará que as categorias de projetos não foram traduzidas. Vamos consertar isso.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/blog/2022-09-30-localized-projects/localized_projects_overview-480.webp 480w,/assets/img/blog/2022-09-30-localized-projects/localized_projects_overview-800.webp 800w,/assets/img/blog/2022-09-30-localized-projects/localized_projects_overview-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/blog/2022-09-30-localized-projects/localized_projects_overview.png" class="img-fluid rounded z-depth-1 mx-auto d-block" width="100%" height="auto" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <div class="caption"> Visão geral dos projetos agora funcionando. </div> <h2 id="traduzindo-as-categorias-de-projetos">Traduzindo as categorias de projetos</h2> <p>As categorias somente serão traduzidas ao serem exibidas, não dentro dos cabeçalhos dos projetos. Isso significa que, ao criar um projeto, você ainda usará as categorias em inglês, como em <code class="language-plaintext highlighter-rouge">_projects/1_project.md</code>:</p> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">category</span><span class="pi">:</span> <span class="s">work</span>
</code></pre></div></div> <p>Para isso, crie a versão localizada das categorias para os dois idiomas. Vamos manter isso dentro da chave <code class="language-plaintext highlighter-rouge">projects</code>, de modo que agora fique assim em <code class="language-plaintext highlighter-rouge">_i18n/en.yml</code>:</p> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">projects</span><span class="pi">:</span>
  <span class="na">titles</span><span class="pi">:</span>
    <span class="na">project1</span><span class="pi">:</span> <span class="s">Project </span><span class="m">1</span>
    <span class="na">project2</span><span class="pi">:</span> <span class="s">Project </span><span class="m">2</span>
    <span class="na">project3</span><span class="pi">:</span> <span class="s">Project </span><span class="m">3</span>
    <span class="na">project4</span><span class="pi">:</span> <span class="s">Project </span><span class="m">4</span>
    <span class="na">project5</span><span class="pi">:</span> <span class="s">Project </span><span class="m">5</span>
    <span class="na">project6</span><span class="pi">:</span> <span class="s">Project </span><span class="m">6</span>
  <span class="na">descriptions</span><span class="pi">:</span>
    <span class="na">project1</span><span class="pi">:</span> <span class="s">a project with a background image</span>
    <span class="na">project2</span><span class="pi">:</span> <span class="s">a project with a background image</span>
    <span class="na">project3</span><span class="pi">:</span> <span class="s">a project that redirects to another website</span>
    <span class="na">project4</span><span class="pi">:</span> <span class="s">another without an image</span>
    <span class="na">project5</span><span class="pi">:</span> <span class="s">a project with a background image</span>
    <span class="na">project6</span><span class="pi">:</span> <span class="s">a project with no image</span>
  <span class="na">categories</span><span class="pi">:</span>
    <span class="na">fun</span><span class="pi">:</span> <span class="s">fun</span>
    <span class="na">work</span><span class="pi">:</span> <span class="s">work</span>
</code></pre></div></div> <p>Agora, em <code class="language-plaintext highlighter-rouge">_pages/projects.md</code>, precisamos pegar a categoria correta dentro do laço, e então sua tradução. Para isso, usaremos a tag <code class="language-plaintext highlighter-rouge">capture</code>. O novo código será:</p> <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- &lt;h2 class="category"&gt;{{ category }}&lt;/h2&gt; --&gt;</span>
{% capture localized_category %}projects.categories.{{category}}{% endcapture %}
<span class="nt">&lt;h2</span> <span class="na">class=</span><span class="s">"category"</span><span class="nt">&gt;</span>{% t localized_category %}<span class="nt">&lt;/h2&gt;</span>
</code></pre></div></div> <p>Agora, tudo está traduzido. A página de visão geral de projetos, as categorias dos projetos e as páginas dos projetos.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/blog/2022-09-30-localized-projects/correct_localized_projects_overview-480.webp 480w,/assets/img/blog/2022-09-30-localized-projects/correct_localized_projects_overview-800.webp 800w,/assets/img/blog/2022-09-30-localized-projects/correct_localized_projects_overview-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/blog/2022-09-30-localized-projects/correct_localized_projects_overview.png" class="img-fluid rounded z-depth-1 mx-auto d-block" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <div class="caption"> Visão geral dos projetos com categorias traduzidas. </div>]]></content><author><name></name></author><category term="website"/><category term="development"/><category term="al-folio"/><category term="website"/><category term="jekyll"/><category term="localization"/><category term="languages"/><summary type="html"><![CDATA[Como criar páginas de projetos traduzidas em seu site al-folio.]]></summary></entry><entry><title type="html">Criando páginas de CV traduzidas</title><link href="https://george-gca.github.io/pt-br/blog/2022/localized-cv/" rel="alternate" type="text/html" title="Criando páginas de CV traduzidas"/><published>2022-09-29T21:40:13+00:00</published><updated>2022-09-29T21:40:13+00:00</updated><id>https://george-gca.github.io/blog/2022/localized-cv</id><content type="html" xml:base="https://george-gca.github.io/blog/2022/localized-cv/"><![CDATA[<p>Este post faz parte de uma série de posts que explicam como configurar seu próprio site baseado no tema al-folio e adicionar suporte a uma segunda língua:</p> <ul> <li><a href="/pt-br/blog/2022/running-local-al-folio/">Executando localmente seu próprio site al-folio</a></li> <li><a href="/pt-br/blog/2022/dual-language-al-folio/">Tornando seu al-folio em um site com dois idiomas</a></li> <li>Criando páginas de CV traduzidas</li> <li><a href="/pt-br/blog/2022/localized-projects/">Criando páginas de projetos traduzidas</a></li> <li><a href="/pt-br/blog/2022/localized-blog/">Criando postagens de blog traduzidas</a></li> </ul> <hr/> <p>Já <a href="/pt-br/blog/2022/running-local-al-folio/">criamos um site al-folio local</a> e <a href="/pt-br/blog/2022/dual-language-al-folio/">adicionamos suporte para outro idioma nele</a>. Se você olhar a aba <code class="language-plaintext highlighter-rouge">cv</code>, ela é bem bonita e também dá a opção de baixar um arquivo pdf. Vamos ver como podemos criar uma versão “localizada” (com tradução por idioma) dela.</p> <h2 id="criando-a-estrutura">Criando a estrutura</h2> <p>A estrutura atual da página cv é composta por 3 arquivos principais: <code class="language-plaintext highlighter-rouge">_pages/cv.md</code>, <code class="language-plaintext highlighter-rouge">_layouts/cv.html</code> e <code class="language-plaintext highlighter-rouge">_data/cv.yml</code>. A primeira é a definição da página, a segunda é o layout da página e a terceira são os dados que são usados ​​para preenchê-la. Vamos criar uma nova pasta para cada idioma dentro do diretório <code class="language-plaintext highlighter-rouge">_data/</code>, e copiar o arquivo <code class="language-plaintext highlighter-rouge">_data/cv.yml</code> para ambos. O novo diretório <code class="language-plaintext highlighter-rouge">_data/</code> ficará assim:</p> <ul> <li>_data/en/cv.yml</li> <li>_data/pt-br/cv.yml</li> <li>_data/coauthors.yml</li> <li>_data/repositories.yml</li> <li>_data/venues.yml</li> </ul> <p>Agora, vamos substituir o conteúdo do arquivo <code class="language-plaintext highlighter-rouge">_data/pt-br/cv.yml</code> pelo seguinte:</p> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="pi">-</span> <span class="na">title</span><span class="pi">:</span> <span class="s">Informações Gerais</span>
  <span class="na">type</span><span class="pi">:</span> <span class="s">map</span>
  <span class="na">contents</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Nome Completo</span>
      <span class="na">value</span><span class="pi">:</span> <span class="s">Albert Einstein</span>
    <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Data de Nascimento</span>
      <span class="na">value</span><span class="pi">:</span> <span class="s">14 de março de </span><span class="m">1879</span>
    <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Idiomas</span>
      <span class="na">value</span><span class="pi">:</span> <span class="s">Inglês, Alemão</span>

<span class="pi">-</span> <span class="na">title</span><span class="pi">:</span> <span class="s">Educação</span>
  <span class="na">type</span><span class="pi">:</span> <span class="s">time_table</span>
  <span class="na">contents</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">title</span><span class="pi">:</span> <span class="s">PhD</span>
      <span class="na">institution</span><span class="pi">:</span> <span class="s">University of Zurich, Zurique, Suíça</span>
      <span class="na">year</span><span class="pi">:</span> <span class="m">1905</span>
      <span class="na">description</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="s">Descrição 1.</span>
        <span class="pi">-</span> <span class="s">Descrição 2.</span>
        <span class="pi">-</span> <span class="na">title</span><span class="pi">:</span> <span class="s">Descrição 3.</span>
          <span class="na">contents</span><span class="pi">:</span>
            <span class="pi">-</span> <span class="s">Sub-descrição 1.</span>
            <span class="pi">-</span> <span class="s">Sub-descrição 2.</span>
    <span class="pi">-</span> <span class="na">title</span><span class="pi">:</span> <span class="s">Diploma de ensino federal</span>
      <span class="na">institution</span><span class="pi">:</span> <span class="s">Eidgenössische Technische Hochschule, Zurique, Suíça</span>
      <span class="na">year</span><span class="pi">:</span> <span class="m">1900</span>
      <span class="na">description</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="s">Descrição 1.</span>
        <span class="pi">-</span> <span class="s">Descrição 2.</span>

<span class="pi">-</span> <span class="na">title</span><span class="pi">:</span> <span class="s">Experiência</span>
  <span class="na">type</span><span class="pi">:</span> <span class="s">time_table</span>
  <span class="na">contents</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">title</span><span class="pi">:</span> <span class="s">Professor de Física Teórica</span>
      <span class="na">institution</span><span class="pi">:</span> <span class="s">Institute for Advanced Study, Princeton University</span>
      <span class="na">year</span><span class="pi">:</span> <span class="s">1933 - </span><span class="m">1955</span>
      <span class="na">description</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="s">Descrição 1.</span>
        <span class="pi">-</span> <span class="s">Descrição 2.</span>
        <span class="pi">-</span> <span class="na">title</span><span class="pi">:</span> <span class="s">Descrição 3.</span>
          <span class="na">contents</span><span class="pi">:</span>
            <span class="pi">-</span> <span class="s">Sub-descrição 1.</span>
            <span class="pi">-</span> <span class="s">Sub-descrição 2.</span>
    <span class="pi">-</span> <span class="na">title</span><span class="pi">:</span> <span class="s">Visiting Professor</span>
      <span class="na">institution</span><span class="pi">:</span> <span class="s">California Institute of Technology, Pasadena, Califórnia, EUA</span>
      <span class="na">year</span><span class="pi">:</span> <span class="m">1933</span>
      <span class="na">description</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="s">Descrição 1.</span>
        <span class="pi">-</span> <span class="s">Descrição 2.</span>

    <span class="pi">-</span> <span class="na">title</span><span class="pi">:</span> <span class="s">Diretor</span>
      <span class="na">institution</span><span class="pi">:</span> <span class="s">Kaiser Wilhelm Institute for Physics, Berlim, Alemanha.</span>
      <span class="na">year</span><span class="pi">:</span> <span class="s">1917-1933</span>

    <span class="pi">-</span> <span class="na">title</span><span class="pi">:</span> <span class="s">Professor de Física Teórica</span>
      <span class="na">institution</span><span class="pi">:</span> <span class="s">Karl-Ferdinand University, Praga, Tchecoslováquia</span>
      <span class="na">year</span><span class="pi">:</span> <span class="s">1911 - </span><span class="m">1917</span>
      <span class="na">description</span><span class="pi">:</span>

    <span class="pi">-</span> <span class="na">title</span><span class="pi">:</span> <span class="s">Professor Associado de Física Teórica</span>
      <span class="na">institution</span><span class="pi">:</span> <span class="s">University of Zurich, Zurique, Suíça</span>
      <span class="na">year</span><span class="pi">:</span> <span class="s">1909 - </span><span class="m">1911</span>

<span class="pi">-</span> <span class="na">title</span><span class="pi">:</span> <span class="s">Projetos de Código Aberto</span>
  <span class="na">type</span><span class="pi">:</span> <span class="s">time_table</span>
  <span class="na">contents</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">title</span><span class="pi">:</span> <span class="s">&lt;a href="https://github.com/alshedivat/al-folio"&gt;al-folio&lt;/a&gt;</span>
      <span class="na">year</span><span class="pi">:</span> <span class="s">2015-atual</span>
      <span class="na">description</span><span class="pi">:</span> <span class="s">Um tema Jekyll bonito, simples, limpo e responsivo para acadêmicos.</span>

<span class="pi">-</span> <span class="na">title</span><span class="pi">:</span> <span class="s">Honras e Prêmios</span>
  <span class="na">type</span><span class="pi">:</span> <span class="s">time_table</span>
  <span class="na">contents</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">year</span><span class="pi">:</span> <span class="m">1921</span>
      <span class="na">items</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="s">Prêmio Nobel de Física</span>
        <span class="pi">-</span> <span class="s">Medalha Matteucci</span>
    <span class="pi">-</span> <span class="na">year</span><span class="pi">:</span> <span class="m">2029</span>
      <span class="na">items</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="s">Medalha Max Planck</span>

<span class="pi">-</span> <span class="na">title</span><span class="pi">:</span> <span class="s">Interesses Acadêmicos</span>
  <span class="na">type</span><span class="pi">:</span> <span class="s">nested_list</span>
  <span class="na">contents</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">title</span><span class="pi">:</span> <span class="s">Tópico 1.</span>
      <span class="na">items</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="s">Descrição 1.</span>
        <span class="pi">-</span> <span class="s">Descrição 2.</span>
    <span class="pi">-</span> <span class="na">title</span><span class="pi">:</span> <span class="s">Tópico 2.</span>
      <span class="na">items</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="s">Descrição 1.</span>
        <span class="pi">-</span> <span class="s">Descrição 2.</span>

<span class="pi">-</span> <span class="na">title</span><span class="pi">:</span> <span class="s">Outros Interesses</span>
  <span class="na">type</span><span class="pi">:</span> <span class="s">list</span>
  <span class="na">contents</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="s">&lt;u&gt;Hobbies:&lt;/u&gt; Hobby 1, Hobby 2, etc.</span>
</code></pre></div></div> <p>Agora, abra o arquivo <code class="language-plaintext highlighter-rouge">_layouts/cv.html</code> e substitua a seguinte linha:</p> <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- {% for entry in site.data.cv %} --&gt;</span>
{% for entry in site.data[site.lang].cv %}
</code></pre></div></div> <p>Isso será suficiente para fazer a página funcionar para o novo idioma. Agora, vamos adicionar a opção de baixar o arquivo pdf traduzido. Para isso, crie uma nova pasta para cada idioma dentro do diretório <code class="language-plaintext highlighter-rouge">assets/pdf/</code>, e copie o arquivo <code class="language-plaintext highlighter-rouge">assets/pdf/example_pdf.pdf</code> para ambos. O novo diretório <code class="language-plaintext highlighter-rouge">assets/pdf/</code> ficará assim:</p> <ul> <li>assets/pdf/en/example_pdf.pdf</li> <li>assets/pdf/pt-br/example_pdf.pdf</li> <li>assets/pdf/example_pdf.pdf</li> </ul> <p>Agora, vamos atualizar o link para o arquivo pdf no idioma correto. Usaremos o mesmo nome para ambos os arquivos, que já está definido no atributo <code class="language-plaintext highlighter-rouge">cv_pdf: example_pdf.pdf</code> dentro de <code class="language-plaintext highlighter-rouge">_pages/cv.md</code>. Se você deseja usar um nome diferente para os pdfs, renomeie ambos e também atualize esta informação no atributo relacionado. Em seguida, modifique a seguinte linha no arquivo <code class="language-plaintext highlighter-rouge">_layouts/cv.html</code>:</p> <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- &lt;h1 class="post-title"&gt;{% t page.title %} {% if page.cv_pdf %}&lt;a href="{{ page.cv_pdf | prepend: 'assets/pdf/' | relative_url}}" target="_blank" rel="noopener noreferrer" class="float-right"&gt;&lt;i class="fas fa-file-pdf"&gt;&lt;/i&gt;&lt;/a&gt;{% endif %}&lt;/h1&gt; --&gt;</span>
<span class="nt">&lt;h1</span> <span class="na">class=</span><span class="s">"post-title"</span><span class="nt">&gt;</span>
  {% t page.title %} {% if page.cv_pdf %}<span class="nt">&lt;a</span>
    <span class="na">href=</span><span class="s">"{{ page.cv_pdf | prepend: '/' | prepend: site.lang | prepend: 'assets/pdf/' | relative_url}}"</span>
    <span class="na">target=</span><span class="s">"_blank"</span>
    <span class="na">rel=</span><span class="s">"noopener noreferrer"</span>
    <span class="na">class=</span><span class="s">"float-right"</span>
    <span class="nt">&gt;&lt;i</span> <span class="na">class=</span><span class="s">"fas fa-file-pdf"</span><span class="nt">&gt;&lt;/i&gt;&lt;/a</span>
  <span class="nt">&gt;</span>{% endif %}
<span class="nt">&lt;/h1&gt;</span>
</code></pre></div></div> <p>E isso vai servir.</p>]]></content><author><name></name></author><category term="website"/><category term="development"/><category term="al-folio"/><category term="website"/><category term="jekyll"/><category term="localization"/><category term="languages"/><summary type="html"><![CDATA[Como criar páginas de CV por idioma no seu site al-folio.]]></summary></entry><entry><title type="html">Tornando seu al-folio em um site com dois idiomas</title><link href="https://george-gca.github.io/pt-br/blog/2022/dual-language-al-folio/" rel="alternate" type="text/html" title="Tornando seu al-folio em um site com dois idiomas"/><published>2022-09-28T11:29:13+00:00</published><updated>2022-09-28T11:29:13+00:00</updated><id>https://george-gca.github.io/blog/2022/dual-language-al-folio</id><content type="html" xml:base="https://george-gca.github.io/blog/2022/dual-language-al-folio/"><![CDATA[<p>Este post faz parte de uma série de posts que explicam como configurar seu próprio site baseado no tema al-folio e adicionar suporte a uma segunda língua:</p> <ul> <li><a href="/pt-br/blog/2022/running-local-al-folio/">Executando localmente seu próprio site al-folio</a></li> <li>Tornando seu al-folio em um site com dois idiomas</li> <li><a href="/pt-br/blog/2022/localized-cv/">Criando páginas de CV traduzidas</a></li> <li><a href="/pt-br/blog/2022/localized-projects/">Criando páginas de projetos traduzidas</a></li> <li><a href="/pt-br/blog/2022/localized-blog/">Criando postagens de blog traduzidas</a></li> </ul> <hr/> <p>O <a href="https://github.com/alshedivat/al-folio">al-folio</a> é um ótimo tema para sites em Jekyll. É altamente personalizável e fácil de usar, com suporte para blogs, informações de repositório, projetos e muito mais (veja o <a href="https://alshedivat.github.io/al-folio/">exemplo</a>). No entanto, ele não oferece suporte a vários idiomas. Neste post, vou mostrar como adicionar suporte para outro idioma no seu al-folio. Vou adicionar suporte para <code class="language-plaintext highlighter-rouge">pt-BR</code>, já que é minha língua nativa. Para isso, você já deve ter <a href="/pt-br/blog/2022/running-local-al-folio/">clonado sua cópia do repositório al-folio e executado localmente</a>.</p> <h2 id="instalando-dependências">Instalando dependências</h2> <p>Faremos isso com a ajuda do <a href="https://github.com/kurtsson/jekyll-multiple-languages-plugin">Jekyll Multiple Languages ​​Plugin</a>. Ele adiciona suporte ao i18n para Jekyll. Para instalar, adicione a seguinte linha ao seu <code class="language-plaintext highlighter-rouge">Gemfile</code> na parte <code class="language-plaintext highlighter-rouge">group :jekyll_plugins do</code>:</p> <div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">gem</span> <span class="s1">'jekyll-multiple-languages-plugin'</span>
</code></pre></div></div> <p>Além disso, adicione a seguinte linha ao seu <code class="language-plaintext highlighter-rouge">_config.yml</code> em <code class="language-plaintext highlighter-rouge">plugins:</code>:</p> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="pi">-</span> <span class="s">jekyll-multiple-languages-plugin</span>
</code></pre></div></div> <p>e as seguintes linhas depois dele (fora de <code class="language-plaintext highlighter-rouge">plugins</code>), por exemplo, antes da seção <code class="language-plaintext highlighter-rouge">Jekyll Minifier</code>:</p> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># configurações de vários idiomas</span>
<span class="na">languages</span><span class="pi">:</span> <span class="pi">[</span><span class="s2">"</span><span class="s">en"</span><span class="pi">,</span> <span class="s2">"</span><span class="s">pt-br"</span><span class="pi">]</span>
<span class="na">default_locale_in_subfolder</span><span class="pi">:</span> <span class="kc">false</span>
</code></pre></div></div> <p>Definir <code class="language-plaintext highlighter-rouge">default_locale_in_subfolder</code> como <code class="language-plaintext highlighter-rouge">false</code> faz com que seu idioma principal seja a raiz do seu site, em vez de estar em uma subpasta. Por exemplo, em vez de <code class="language-plaintext highlighter-rouge">https://george-gca.github.io/en/</code>, será <code class="language-plaintext highlighter-rouge">https://george-gca.github.io/</code>. Este é o comportamento padrão do al-folio, então vamos mantê-lo. O primeiro idioma na lista será o idioma padrão, inglês neste caso. Em seguida, execute <code class="language-plaintext highlighter-rouge">bundle install</code> para instalar o plugin.</p> <h2 id="criando-arquivos-de-tradução">Criando arquivos de tradução</h2> <p>Crie uma pasta chamada <code class="language-plaintext highlighter-rouge">_i18n</code> e adicione subpastas para cada idioma, usando os mesmos nomes usados ​​na configuração <code class="language-plaintext highlighter-rouge">languages</code> no <code class="language-plaintext highlighter-rouge">_config.yml</code> que acabamos de adicionar. Além disso, crie um arquivo <code class="language-plaintext highlighter-rouge">yml</code> para cada idioma. Por exemplo, para <code class="language-plaintext highlighter-rouge">pt-br</code>, crie uma pasta chamada <code class="language-plaintext highlighter-rouge">_i18n/pt-br</code>. Em seguida, crie um arquivo chamado <code class="language-plaintext highlighter-rouge">_i18n/pt-br.yml</code>. Nossa estrutura de diretórios deve ficar assim:</p> <ul> <li>_i18n/en.yml</li> <li>_i18n/pt-br.yml</li> <li>_i18n/en/</li> <li>_i18n/pt-br/</li> </ul> <h2 id="adicionando-alternância-de-idioma">Adicionando alternância de idioma</h2> <p>Agora, precisamos adicionar uma forma de mudar o idioma do nosso site. Vamos adicioná-lo à barra de navegação. Abra o arquivo <code class="language-plaintext highlighter-rouge">_includes/header.html</code> e adicione o seguinte código antes da área <code class="language-plaintext highlighter-rouge">Toogle theme mode</code>:</p> <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- Mudar a lingua --&gt;</span>
<span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">"nav-item active"</span><span class="nt">&gt;</span>
  {% if site.lang == "en" %}
  <span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">"nav-link"</span> <span class="na">href=</span><span class="s">"{{site.baseurl_root}}/pt-br{{page.url}}"</span><span class="nt">&gt;</span> PT-BR <span class="nt">&lt;/a&gt;</span>
  {% elsif site.lang == "pt-br" %}
  <span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">"nav-link"</span> <span class="na">href=</span><span class="s">"{{site.baseurl_root}}{{page.url}}"</span><span class="nt">&gt;</span> EN <span class="nt">&lt;/a&gt;</span>
  {% endif %}
<span class="nt">&lt;/li&gt;</span>
</code></pre></div></div> <p>Isso adiciona um link para o outro idioma. O <code class="language-plaintext highlighter-rouge">page.url</code> mantém a informação da página atual, para que o usuário não seja redirecionado para a página inicial. Observe que <code class="language-plaintext highlighter-rouge">site.baseurl_root</code> é uma variável introduzida pelo Jekyll Multiple Languages ​​Plugin e aponta para a raiz da página sem o caminho do idioma. Mais informações sobre as variáveis ​​recém-adicionadas podem ser encontradas <a href="https://github.com/kurtsson/jekyll-multiple-languages-plugin#55-link-between-languages">aqui</a>.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/blog/2022-09-28-dual-language-al-folio/header_en-480.webp 480w,/assets/img/blog/2022-09-28-dual-language-al-folio/header_en-800.webp 800w,/assets/img/blog/2022-09-28-dual-language-al-folio/header_en-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/blog/2022-09-28-dual-language-al-folio/header_en.png" class="img-fluid rounded z-depth-1 mx-auto d-block" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <div class="caption"> Cabeçalho com botão para mudar de idioma. </div> <h2 id="adicionando-títulos-traduzidos">Adicionando títulos traduzidos</h2> <p>Até agora, adicionamos tudo o que é necessário para dar suporte à tradução, mas não fizemos a tradução de fato. Vamos fazer isso agora. Abra o arquivo <code class="language-plaintext highlighter-rouge">_i18n/en.yml</code> e adicione as seguintes linhas:</p> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">titles</span><span class="pi">:</span>
  <span class="na">about</span><span class="pi">:</span> <span class="s">about</span>
  <span class="na">blog</span><span class="pi">:</span> <span class="s">blog</span>
  <span class="na">cv</span><span class="pi">:</span> <span class="s">cv</span>
  <span class="na">news</span><span class="pi">:</span> <span class="s">news</span>
  <span class="na">projects</span><span class="pi">:</span> <span class="s">projects</span>
  <span class="na">publications</span><span class="pi">:</span> <span class="s">publications</span>
  <span class="na">repositories</span><span class="pi">:</span> <span class="s">repositories</span>
  <span class="na">teaching</span><span class="pi">:</span> <span class="s">teaching</span>
  <span class="na">submenus</span><span class="pi">:</span> <span class="s">submenus</span>
  <span class="na">unk</span><span class="pi">:</span> <span class="s">page not found</span>
</code></pre></div></div> <p>Isso vai criar os títulos das páginas. Agora, abra o arquivo <code class="language-plaintext highlighter-rouge">_i18n/pt-br.yml</code> e adicione as seguintes linhas:</p> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">titles</span><span class="pi">:</span>
  <span class="na">about</span><span class="pi">:</span> <span class="s">sobre</span>
  <span class="na">blog</span><span class="pi">:</span> <span class="s">blog</span>
  <span class="na">cv</span><span class="pi">:</span> <span class="s">cv</span>
  <span class="na">news</span><span class="pi">:</span> <span class="s">novidades</span>
  <span class="na">projects</span><span class="pi">:</span> <span class="s">projetos</span>
  <span class="na">publications</span><span class="pi">:</span> <span class="s">publicações</span>
  <span class="na">repositories</span><span class="pi">:</span> <span class="s">repositórios</span>
  <span class="na">teaching</span><span class="pi">:</span> <span class="s">ensino</span>
  <span class="na">submenus</span><span class="pi">:</span> <span class="s">submenus</span>
  <span class="na">unk</span><span class="pi">:</span> <span class="s">página não encontrada</span>
</code></pre></div></div> <p>Isso adiciona os títulos das páginas em português. Agora que temos os títulos traduzidos, temos que modificar as páginas para que usem essas variáveis. Para isso, abra todas as páginas da pasta <code class="language-plaintext highlighter-rouge">_pages</code> e altere seus títulos para usar a variável <code class="language-plaintext highlighter-rouge">titles</code> correta. Por exemplo, o novo título da página <code class="language-plaintext highlighter-rouge">about.md</code> deve ficar assim:</p> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">title</span><span class="pi">:</span> <span class="s">titles.about</span>
</code></pre></div></div> <p>Se você executar seu site agora, verá que os títulos são mostrados como <code class="language-plaintext highlighter-rouge">titles.about</code> em vez de apenas <code class="language-plaintext highlighter-rouge">about</code> como deveria, já que o padrão é em inglês. Ainda precisamos dizer aos modelos html para selecionar a versão traduzida correta dessas variáveis. Para isso, abra o arquivo <code class="language-plaintext highlighter-rouge">_includes/header.html</code> e altere todas as variáveis ​​<code class="language-plaintext highlighter-rouge">title</code> para usar a <a href="https://github.com/kurtsson/jekyll-multiple-languages-plugin#51-translating-strings">função t</a>. A função <code class="language-plaintext highlighter-rouge">t</code>, ou sua versão mais longa <code class="language-plaintext highlighter-rouge">translate</code>, vai garantir que ela selecione a versão correta do arquivo yml do idioma atual. Mais especificamente, faça as seguintes alterações:</p> <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- &lt;a class="nav-link" href="{{ '/' | relative_url }}"&gt;{{ about_title }} --&gt;</span>
<span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">"nav-link"</span> <span class="na">href=</span><span class="s">"{{ '/' | relative_url }}"</span>
  <span class="nt">&gt;</span>{% t about_title %}

  <span class="c">&lt;!-- &lt;a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"&gt;{{ p.title }} --&gt;</span>
  <span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">"nav-link dropdown-toggle"</span> <span class="na">href=</span><span class="s">"#"</span> <span class="na">id=</span><span class="s">"navbarDropdown"</span> <span class="na">role=</span><span class="s">"button"</span> <span class="na">data-toggle=</span><span class="s">"dropdown"</span> <span class="na">aria-haspopup=</span><span class="s">"true"</span> <span class="na">aria-expanded=</span><span class="s">"false"</span>
    <span class="nt">&gt;</span>{% t p.title %}

    <span class="c">&lt;!-- &lt;a class="dropdown-item" href="{{ child.permalink | relative_url }}"&gt;{{ child.title }}&lt;/a&gt; --&gt;</span>
    <span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">"dropdown-item"</span> <span class="na">href=</span><span class="s">"{{ child.permalink | relative_url }}"</span><span class="nt">&gt;</span>{% t child.title %}<span class="nt">&lt;/a&gt;</span>

    <span class="c">&lt;!-- &lt;a class="nav-link" href="{{ p.url | relative_url }}"&gt;{{ p.title }} --&gt;</span>
    <span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">"nav-link"</span> <span class="na">href=</span><span class="s">"{{ p.url | relative_url }}"</span><span class="nt">&gt;</span>{% t p.title %}<span class="nt">&lt;/a&gt;&lt;/a</span>
  <span class="nt">&gt;&lt;/a</span>
<span class="nt">&gt;</span>
</code></pre></div></div> <p>Agora execute seu site novamente e você verá que os títulos têm os valores corretos. Você pode até alterar o idioma clicando no link e ver que os títulos mudam de acordo.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/blog/2022-09-28-dual-language-al-folio/header_pt-br-480.webp 480w,/assets/img/blog/2022-09-28-dual-language-al-folio/header_pt-br-800.webp 800w,/assets/img/blog/2022-09-28-dual-language-al-folio/header_pt-br-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/blog/2022-09-28-dual-language-al-folio/header_pt-br.png" class="img-fluid rounded z-depth-1 mx-auto d-block" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <div class="caption"> Cabeçalho em português. </div> <h2 id="corrigindo-a-navegação-traduzida">Corrigindo a navegação traduzida</h2> <p>Tudo parece funcionar bem, só que não. Se você clicar no botão <code class="language-plaintext highlighter-rouge">PT-BR</code> no cabeçalho, depois clicar em outra página (por exemplo, repositórios), os títulos serão alterados novamente para inglês. Para lidar com esse tipo de situação, temos que garantir que, quando o usuário clicar nos links do cabeçalho, ele manterá o idioma. Vamos fazer isso primeiro para a página <code class="language-plaintext highlighter-rouge">about</code>. Para fazer isso, abra o arquivo <code class="language-plaintext highlighter-rouge">_includes/header.html</code> e mude o link para a página <code class="language-plaintext highlighter-rouge">sobre</code>, para que ele use a variável <code class="language-plaintext highlighter-rouge">site.baseurl</code> ao invés de <code class="language-plaintext highlighter-rouge">relative_url</code>. Mais especificamente, faça as seguintes alterações:</p> <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- &lt;a class="nav-link" href="{{ '/' | relative_url }}"&gt;{% t about_title %} --&gt;</span>
<span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">"nav-link"</span> <span class="na">href=</span><span class="s">"{{ '/' | prepend: site.baseurl}}"</span><span class="nt">&gt;</span>{% t about_title %}<span class="nt">&lt;/a&gt;</span>
</code></pre></div></div> <p>Agora, se você estiver em outra página, por exemplo, a página <code class="language-plaintext highlighter-rouge">repositories</code>, e clicar no botão <code class="language-plaintext highlighter-rouge">PT-BR</code>, depois clicar na página <code class="language-plaintext highlighter-rouge">about</code>, ele vai manter o idioma nos títulos. Agora, vamos habilitar isso para todas as outras páginas. Para isso, abra o arquivo <code class="language-plaintext highlighter-rouge">_includes/header.html</code> novamente e faça as seguintes alterações:</p> <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- &lt;a class="nav-link" href="{{ '/blog/' | relative_url }}"&gt;{{ site.blog_nav_title }} --&gt;</span>
<span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">"nav-link"</span> <span class="na">href=</span><span class="s">"{{ '/blog/' | prepend: site.baseurl }}"</span>
  <span class="nt">&gt;</span>{{ site.blog_nav_title }}

  <span class="c">&lt;!-- &lt;a class="dropdown-item" href="{{ child.permalink | relative_url }}"&gt;{% t child.title %}&lt;/a&gt; --&gt;</span>
  <span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">"dropdown-item"</span> <span class="na">href=</span><span class="s">"{{ child.permalink | prepend: site.baseurl }}"</span><span class="nt">&gt;</span>{% t child.title %}<span class="nt">&lt;/a&gt;</span>

  <span class="c">&lt;!-- &lt;a class="nav-link" href="{{ p.url | relative_url }}"&gt;{% t p.title %} --&gt;</span>
  <span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">"nav-link"</span> <span class="na">href=</span><span class="s">"{{ p.url | prepend: site.baseurl }}"</span><span class="nt">&gt;</span>{% t p.title %}<span class="nt">&lt;/a&gt;&lt;/a</span>
<span class="nt">&gt;</span>
</code></pre></div></div> <h2 id="adicionando-títulos-traduzidos-dentro-das-páginas">Adicionando títulos traduzidos dentro das páginas</h2> <p>Agora tudo funciona! O sol está nascendo e o mundo está colorido novamente :rainbow:. Mas espera, ainda faltam algumas coisas. Se você clicar no botão <code class="language-plaintext highlighter-rouge">PT-BR</code>, depois clicar na página <code class="language-plaintext highlighter-rouge">publicações</code>, você verá que o título da página ainda é <code class="language-plaintext highlighter-rouge">titles.publications</code>.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/blog/2022-09-28-dual-language-al-folio/publications_title_wrong-480.webp 480w,/assets/img/blog/2022-09-28-dual-language-al-folio/publications_title_wrong-800.webp 800w,/assets/img/blog/2022-09-28-dual-language-al-folio/publications_title_wrong-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/blog/2022-09-28-dual-language-al-folio/publications_title_wrong.png" class="img-fluid rounded z-depth-1 mx-auto d-block" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <div class="caption"> O que deveria ser um título traduzido. </div> <p>Que merda, isso vai acabar algum dia? :scream: Bem, sim, vai. Só precisamos dizer às páginas para usar o título traduzido correto. Para isso, vamos ver quais templates as páginas usam. A página <code class="language-plaintext highlighter-rouge">publications</code> por exemplo, que está localizada no arquivo <code class="language-plaintext highlighter-rouge">_pages/publications.md</code>, utiliza o template <code class="language-plaintext highlighter-rouge">page</code>, como pode ser visto na seguinte linha no início do arquivo:</p> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">layout</span><span class="pi">:</span> <span class="s">page</span>
</code></pre></div></div> <p>Então, vamos abrir o arquivo <code class="language-plaintext highlighter-rouge">_layouts/page.html</code> e alterar o título para usar a função <code class="language-plaintext highlighter-rouge">t</code>. Mais especificamente, faça as seguintes alterações:</p> <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- &lt;h1 class="post-title"&gt;{{ page.title }}&lt;/h1&gt; --&gt;</span>
<span class="nt">&lt;h1</span> <span class="na">class=</span><span class="s">"post-title"</span><span class="nt">&gt;</span>{% t page.title %}<span class="nt">&lt;/h1&gt;</span>
</code></pre></div></div> <p>Agora, se você executar seu site, ele não funcionará. Isso acontece porque a função <code class="language-plaintext highlighter-rouge">t</code> agora está tentando traduzir uma variável que não está definida. Mas onde? Se você fizer uma pequena pesquisa, notará que a página <code class="language-plaintext highlighter-rouge">publications</code> não é a única que usa o <code class="language-plaintext highlighter-rouge">layout: page</code>. Todas as páginas que o utilizam são:</p> <ul> <li>404.html</li> <li>news.html</li> <li>_pages/dropdown.md</li> <li>_pages/projects.md</li> <li>_pages/publications.md</li> <li>_pages/repositories.md</li> <li>_pages/teaching.md</li> <li>_projects/1_project.md</li> <li>_projects/2_project.md</li> <li>_projects/3_project.md</li> <li>_projects/4_project.md</li> <li>_projects/5_project.md</li> <li>_projects/6_project.md</li> </ul> <p>Você precisa alterar o <code class="language-plaintext highlighter-rouge">title</code> de <strong>TODAS</strong> essas páginas. Nós já fizemos isso para as páginas dentro de <code class="language-plaintext highlighter-rouge">_pages/</code>, então vamos fazer para o resto. Abra o arquivo <code class="language-plaintext highlighter-rouge">404.html</code> e altere seu <code class="language-plaintext highlighter-rouge">title: "Page not found"</code> para <code class="language-plaintext highlighter-rouge">title: title.unk</code>, pois já definimos <code class="language-plaintext highlighter-rouge">titles.unk</code> em <code class="language-plaintext highlighter-rouge">_i18n/en.yml</code> e <code class="language-plaintext highlighter-rouge">_i18n /pt-br.yml</code>. Para manter a seção de projetos mais organizada, vamos criar novos atributos para ela dentro de cada um dos arquivos de tradução. Assim, os novos <code class="language-plaintext highlighter-rouge">_i18n/en.yml</code> e <code class="language-plaintext highlighter-rouge">_i18n/pt-br.yml</code> ficarão assim, respectivamente:</p> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">titles</span><span class="pi">:</span>
  <span class="na">about</span><span class="pi">:</span> <span class="s">about</span>
  <span class="na">blog</span><span class="pi">:</span> <span class="s">blog</span>
  <span class="na">cv</span><span class="pi">:</span> <span class="s">cv</span>
  <span class="na">news</span><span class="pi">:</span> <span class="s">news</span>
  <span class="na">projects</span><span class="pi">:</span> <span class="s">projects</span>
  <span class="na">publications</span><span class="pi">:</span> <span class="s">publications</span>
  <span class="na">repositories</span><span class="pi">:</span> <span class="s">repositories</span>
  <span class="na">teaching</span><span class="pi">:</span> <span class="s">teaching</span>
  <span class="na">submenus</span><span class="pi">:</span> <span class="s">submenus</span>
  <span class="na">unk</span><span class="pi">:</span> <span class="s">page not found</span>
<span class="na">projects</span><span class="pi">:</span>
  <span class="na">titles</span><span class="pi">:</span>
    <span class="na">project1</span><span class="pi">:</span> <span class="s">Project </span><span class="m">1</span>
    <span class="na">project2</span><span class="pi">:</span> <span class="s">Project </span><span class="m">2</span>
    <span class="na">project3</span><span class="pi">:</span> <span class="s">Project </span><span class="m">3</span>
    <span class="na">project4</span><span class="pi">:</span> <span class="s">Project </span><span class="m">4</span>
    <span class="na">project5</span><span class="pi">:</span> <span class="s">Project </span><span class="m">5</span>
    <span class="na">project6</span><span class="pi">:</span> <span class="s">Project </span><span class="m">6</span>
</code></pre></div></div> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">titles</span><span class="pi">:</span>
  <span class="na">about</span><span class="pi">:</span> <span class="s">sobre</span>
  <span class="na">blog</span><span class="pi">:</span> <span class="s">blog</span>
  <span class="na">cv</span><span class="pi">:</span> <span class="s">cv</span>
  <span class="na">news</span><span class="pi">:</span> <span class="s">novidades</span>
  <span class="na">projects</span><span class="pi">:</span> <span class="s">projetos</span>
  <span class="na">publications</span><span class="pi">:</span> <span class="s">publicações</span>
  <span class="na">repositories</span><span class="pi">:</span> <span class="s">repositórios</span>
  <span class="na">teaching</span><span class="pi">:</span> <span class="s">ensino</span>
  <span class="na">submenus</span><span class="pi">:</span> <span class="s">submenus</span>
  <span class="na">unk</span><span class="pi">:</span> <span class="s">página não encontrada</span>
<span class="na">projects</span><span class="pi">:</span>
  <span class="na">titles</span><span class="pi">:</span>
    <span class="na">project1</span><span class="pi">:</span> <span class="s">Projeto </span><span class="m">1</span>
    <span class="na">project2</span><span class="pi">:</span> <span class="s">Projeto </span><span class="m">2</span>
    <span class="na">project3</span><span class="pi">:</span> <span class="s">Projeto </span><span class="m">3</span>
    <span class="na">project4</span><span class="pi">:</span> <span class="s">Projeto </span><span class="m">4</span>
    <span class="na">project5</span><span class="pi">:</span> <span class="s">Projeto </span><span class="m">5</span>
    <span class="na">project6</span><span class="pi">:</span> <span class="s">Projeto </span><span class="m">6</span>
</code></pre></div></div> <p>Agora, tudo o que precisamos fazer é abrir todos os arquivos dentro de <code class="language-plaintext highlighter-rouge">_projects/</code> e alterar seus títulos. Para o arquivo <code class="language-plaintext highlighter-rouge">_projects/1_project.md</code>, por exemplo, ficará assim:</p> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">title</span><span class="pi">:</span> <span class="s">projects.titles.project1</span>
</code></pre></div></div> <p>Finalmente, podemos executar nosso site novamente e ele funcionará conforme o esperado. :tada:.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/blog/2022-09-28-dual-language-al-folio/publications_title_fixed-480.webp 480w,/assets/img/blog/2022-09-28-dual-language-al-folio/publications_title_fixed-800.webp 800w,/assets/img/blog/2022-09-28-dual-language-al-folio/publications_title_fixed-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/blog/2022-09-28-dual-language-al-folio/publications_title_fixed.png" class="img-fluid rounded z-depth-1 mx-auto d-block" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <div class="caption"> Agora ISSO é um título traduzido. </div> <p>Não se esqueça de fazer o mesmo para as outras páginas que usam layouts diferentes, como <code class="language-plaintext highlighter-rouge">cv</code>. Abra o arquivo <code class="language-plaintext highlighter-rouge">_layouts/cv.html</code> e modifique:</p> <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- &lt;h1 class="post-title"&gt;{{ page.title }} {% if page.cv_pdf %}&lt;a href="{{ page.cv_pdf | prepend: 'assets/pdf/' | relative_url}}" target="_blank" rel="noopener noreferrer" class="float-right"&gt;&lt;i class="fas fa-file-pdf"&gt;&lt;/i&gt;&lt;/a&gt;{% endif %}&lt;/h1&gt; --&gt;</span>
<span class="nt">&lt;h1</span> <span class="na">class=</span><span class="s">"post-title"</span><span class="nt">&gt;</span>
  {% t page.title %} {% if page.cv_pdf %}<span class="nt">&lt;a</span>
    <span class="na">href=</span><span class="s">"{{ page.cv_pdf | prepend: 'assets/pdf/' | relative_url}}"</span>
    <span class="na">target=</span><span class="s">"_blank"</span>
    <span class="na">rel=</span><span class="s">"noopener noreferrer"</span>
    <span class="na">class=</span><span class="s">"float-right"</span>
    <span class="nt">&gt;&lt;i</span> <span class="na">class=</span><span class="s">"fas fa-file-pdf"</span><span class="nt">&gt;&lt;/i&gt;&lt;/a</span>
  <span class="nt">&gt;</span>{% endif %}
<span class="nt">&lt;/h1&gt;</span>
</code></pre></div></div> <h2 id="adicionando-conteúdo-traduzido">Adicionando conteúdo traduzido</h2> <p>Agora, vamos ver como adicionar conteúdo traduzido. Por exemplo, digamos que queremos traduzir a biografia na página <code class="language-plaintext highlighter-rouge">sobre</code>. A melhor maneira de fazer isso é criar partes traduzidas das páginas para cada idioma e importar a versão correta. Para isso, recorte toda a parte da biografia da página <code class="language-plaintext highlighter-rouge">about</code> (<code class="language-plaintext highlighter-rouge">_pages/about.md</code>), deixando apenas o cabeçalho. Em seguida, crie um novo arquivo <code class="language-plaintext highlighter-rouge">_i18n/en/pages/about.md</code> e cole o conteúdo lá. Faça o mesmo para o arquivo <code class="language-plaintext highlighter-rouge">_i18n/pt-br/pages/about.md</code>, mas adicionando a versão traduzida. Agora, no arquivo <code class="language-plaintext highlighter-rouge">_pages/about.md</code>, adicione a função <a href="https://github.com/kurtsson/jekyll-multiple-languages-plugin#52-inclusive-translated-files">translate_file</a>, apontando para os novos arquivos de sobre. O <code class="language-plaintext highlighter-rouge">_pages/about.md</code> final ficará assim:</p> <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>---
layout: about
title: titles.about
subtitle: <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">'#'</span><span class="nt">&gt;</span>Affiliations<span class="nt">&lt;/a&gt;</span>. Address. Contacts. Moto. Etc.
permalink: /

profile:
  align: right
  image: prof_pic.jpg
  image_circular: false # crops the image to make it circular
  address: &gt;
    <span class="nt">&lt;p&gt;</span>555 your office number<span class="nt">&lt;/p&gt;</span>
    <span class="nt">&lt;p&gt;</span>123 your address street<span class="nt">&lt;/p&gt;</span>
    <span class="nt">&lt;p&gt;</span>Your City, State 12345<span class="nt">&lt;/p&gt;</span>

news: true # includes a list of news items
selected_papers: true # includes a list of papers marked as "selected={true}"
social: true # includes social icons at the bottom of the page
---

{% translate_file pages/about.md %}
</code></pre></div></div> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/blog/2022-09-28-dual-language-al-folio/about_pt-br-480.webp 480w,/assets/img/blog/2022-09-28-dual-language-al-folio/about_pt-br-800.webp 800w,/assets/img/blog/2022-09-28-dual-language-al-folio/about_pt-br-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/blog/2022-09-28-dual-language-al-folio/about_pt-br.png" class="img-fluid rounded z-depth-1 mx-auto d-block" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <div class="caption"> Biografia em português. </div> <h2 id="resolvendo-o-título-da-página-no-browser">Resolvendo o título da página no browser</h2> <p>Atualmente, quando você abre uma seção do seu site, na aba do navegador o nome da seção não é traduzido. Para resolver isso, abra o arquivo <code class="language-plaintext highlighter-rouge">_includes/metadata.html</code> e altere o seguinte código:</p> <div class="language-liquid highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">{%</span><span class="w"> </span><span class="nt">if</span><span class="w"> </span><span class="nv">page</span><span class="p">.</span><span class="nv">url</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s1">'/blog/index.html'</span><span class="w"> </span><span class="cp">%}</span>
  <span class="cp">{{</span><span class="w"> </span><span class="nv">site</span><span class="p">.</span><span class="nv">blog_nav_title</span><span class="w"> </span><span class="cp">}}</span> | <span class="cp">{{</span><span class="w"> </span><span class="nv">title</span><span class="w"> </span><span class="cp">}}</span>
<span class="cp">{%-</span><span class="w"> </span><span class="nt">elsif</span><span class="w"> </span><span class="nv">page</span><span class="p">.</span><span class="nv">title</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="s1">'blank'</span><span class="w"> </span><span class="ow">and</span><span class="w"> </span><span class="nv">page</span><span class="p">.</span><span class="nv">url</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="s1">'/'</span><span class="w"> </span><span class="cp">-%}</span>
  <span class="cp">{{</span><span class="w"> </span><span class="nv">page</span><span class="p">.</span><span class="nv">title</span><span class="w"> </span><span class="cp">}}</span> | <span class="cp">{{</span><span class="w"> </span><span class="nv">title</span><span class="w"> </span><span class="cp">}}</span>
<span class="cp">{%-</span><span class="w"> </span><span class="nt">else</span><span class="w"> </span><span class="cp">-%}</span>
  <span class="cp">{{</span><span class="w"> </span><span class="nv">title</span><span class="w"> </span><span class="cp">}}</span>
<span class="cp">{%-</span><span class="w"> </span><span class="nt">endif</span><span class="w"> </span><span class="cp">-%}</span>
</code></pre></div></div> <p>por esse código:</p> <div class="language-liquid highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">{%</span><span class="w"> </span><span class="nt">if</span><span class="w"> </span><span class="nv">page</span><span class="p">.</span><span class="nv">url</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s1">'/blog/index.html'</span><span class="w"> </span><span class="cp">%}</span>
  <span class="cp">{{</span><span class="w"> </span><span class="nv">site</span><span class="p">.</span><span class="nv">blog_nav_title</span><span class="w"> </span><span class="cp">}}</span> | <span class="cp">{{</span><span class="w"> </span><span class="nv">title</span><span class="w"> </span><span class="cp">}}</span>
<span class="cp">{%</span><span class="w"> </span><span class="nt">elsif</span><span class="w"> </span><span class="nv">page</span><span class="p">.</span><span class="nv">url</span><span class="w"> </span><span class="ow">contains</span><span class="w"> </span><span class="s1">'/blog/'</span><span class="w"> </span><span class="cp">%}</span>
  <span class="cp">{{</span><span class="w"> </span><span class="nv">page</span><span class="p">.</span><span class="nv">title</span><span class="w"> </span><span class="cp">}}</span> | <span class="cp">{{</span><span class="w"> </span><span class="nv">title</span><span class="w"> </span><span class="cp">}}</span>
<span class="cp">{%-</span><span class="w"> </span><span class="nt">elsif</span><span class="w"> </span><span class="nv">page</span><span class="p">.</span><span class="nv">title</span><span class="w"> </span><span class="ow">contains</span><span class="w"> </span><span class="s1">'Announcement'</span><span class="w"> </span><span class="cp">-%}</span>
  <span class="cp">{{</span><span class="w"> </span><span class="nv">title</span><span class="w"> </span><span class="cp">}}</span>
<span class="cp">{%-</span><span class="w"> </span><span class="nt">elsif</span><span class="w"> </span><span class="nv">page</span><span class="p">.</span><span class="nv">title</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="s1">'blank'</span><span class="w"> </span><span class="ow">and</span><span class="w"> </span><span class="nv">page</span><span class="p">.</span><span class="nv">url</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="s1">'/'</span><span class="w"> </span><span class="cp">-%}</span>
  <span class="cp">{%</span><span class="w"> </span><span class="nt">t</span><span class="w"> </span><span class="nv">page</span><span class="p">.</span><span class="nv">title</span><span class="w"> </span><span class="cp">%}</span> | <span class="cp">{{</span><span class="w"> </span><span class="nv">title</span><span class="w"> </span><span class="cp">}}</span>
<span class="cp">{%-</span><span class="w"> </span><span class="nt">else</span><span class="w"> </span><span class="cp">-%}</span>
  <span class="cp">{{</span><span class="w"> </span><span class="nv">title</span><span class="w"> </span><span class="cp">}}</span>
<span class="cp">{%-</span><span class="w"> </span><span class="nt">endif</span><span class="w"> </span><span class="cp">-%}</span>
</code></pre></div></div> <p>Isso irá gerar outro problema, causado pelo título da segunda notícia na página de sobre. Precisamos adicionar um título traduzido para esta notícia. Agora, faça as seguintes alterações:</p> <p>Arquivo <code class="language-plaintext highlighter-rouge">_news/announcement_2.md</code>:</p> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># title: A long announcement with details</span>
<span class="na">title</span><span class="pi">:</span> <span class="s">news.titles.news2</span>
</code></pre></div></div> <p>Arquivo <code class="language-plaintext highlighter-rouge">_i18n/en.yml</code>:</p> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">news</span><span class="pi">:</span>
  <span class="na">titles</span><span class="pi">:</span>
    <span class="na">news2</span><span class="pi">:</span> <span class="s">A long announcement with details</span>
</code></pre></div></div> <p>Arquivo <code class="language-plaintext highlighter-rouge">_i18n/pt-br.yml</code>:</p> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">news</span><span class="pi">:</span>
  <span class="na">titles</span><span class="pi">:</span>
    <span class="na">news2</span><span class="pi">:</span> <span class="s">Um anúncio longo com detalhes</span>
</code></pre></div></div> <h2 id="resumindo">Resumindo</h2> <p>Adicionar uma versão traduzida do seu site não é difícil, mas é meio chato. Mesmo com a ajuda deste <a href="https://github.com/kurtsson/jekyll-multiple-languages-plugin">ótimo plugin</a>, existem alguns pequenos detalhes que, se perdidos, levarão muito tempo e paciência para dominar (pelo menos me levou). Há algumas coisas que podem ser feitas também, como traduzir a descrição das páginas e mais conteúdo, mas como isso pode ser feito com base nos mesmos conceitos que mostrei aqui, vou deixar como lição de casa :laughing:. Vou detalhar como criar versões traduzidas do cv e blog em outros posts, já que esse já tá bem longo. Espero que este post tenha sido útil para você. Se você tiver alguma dúvida, sinta-se à vontade para perguntar nos comentários.</p>]]></content><author><name></name></author><category term="website"/><category term="development"/><category term="al-folio"/><category term="website"/><category term="jekyll"/><category term="localization"/><category term="languages"/><summary type="html"><![CDATA[Adicionando suporte para outro idioma em seu al-folio.]]></summary></entry><entry><title type="html">Executando localmente seu próprio site al-folio</title><link href="https://george-gca.github.io/pt-br/blog/2022/running-local-al-folio/" rel="alternate" type="text/html" title="Executando localmente seu próprio site al-folio"/><published>2022-09-27T22:13:16+00:00</published><updated>2022-09-27T22:13:16+00:00</updated><id>https://george-gca.github.io/blog/2022/running-local-al-folio</id><content type="html" xml:base="https://george-gca.github.io/blog/2022/running-local-al-folio/"><![CDATA[<p>Este post faz parte de uma série de posts que explicam como configurar seu próprio site baseado no tema al-folio e adicionar suporte a uma segunda língua:</p> <ul> <li>Executando localmente seu próprio site al-folio</li> <li><a href="/pt-br/blog/2022/dual-language-al-folio/">Tornando seu al-folio em um site com dois idiomas</a></li> <li><a href="/pt-br/blog/2022/localized-cv/">Criando páginas de CV traduzidas</a></li> <li><a href="/pt-br/blog/2022/localized-projects/">Criando páginas de projetos traduzidas</a></li> <li><a href="/pt-br/blog/2022/localized-blog/">Criando postagens de blog traduzidas</a></li> </ul> <hr/> <p>Decidi escrever este post porque tive dificuldade em descobrir como executar minha própria página Jekyll localmente, principalmente porque eu não uso regularmente o Jekyll. Espero que este post ajude você a executar seu próprio site <a href="https://alshedivat.github.io/al-folio/">al-folio</a> localmente, ou qualquer outro tema baseado em Jekyll que você tenha.</p> <h2 id="instalando-ruby-e-rbenv">Instalando Ruby e rbenv</h2> <p>Meu código foi executado em um ambiente Linux nativo (Ubuntu 22.04.1 LTS), mas também testei em um <a href="https://learn.microsoft.com/pt-br/windows/wsl/install">ambiente WSL</a> . Primeiro você precisa instalar o suporte à linguagem Ruby. A <a href="https://github.com/alshedivat/al-folio#local-setup-standard">maneira recomendada</a> pelos criadores do al-folio é usar <a href="https://github.com/rbenv/rbenv">rbenv</a>. Para aqueles familiarizados com Python, <code class="language-plaintext highlighter-rouge">rbenv</code> é semelhante ao <code class="language-plaintext highlighter-rouge">pyenv</code>. Para instalar o <code class="language-plaintext highlighter-rouge">rbenv</code>, execute os seguintes comandos:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone https://github.com/rbenv/rbenv.git ~/.rbenv
<span class="nb">cd</span> ~/.rbenv <span class="o">&amp;&amp;</span> src/configure <span class="o">&amp;&amp;</span> make <span class="nt">-C</span> src
</code></pre></div></div> <p>Isso fará o download e compilação do repositório <code class="language-plaintext highlighter-rouge">rbenv</code> no seu home. <strong>NÃO</strong> instale via <code class="language-plaintext highlighter-rouge">apt</code>, pois ele baixa uma versão mais antiga do pacote e não permite que você instale as versões mais recentes do Ruby. Em seguida, adicione as seguintes linhas ao seu arquivo <code class="language-plaintext highlighter-rouge">~/.bashrc</code>:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># habilita o rbenv</span>
<span class="k">if</span> <span class="o">[</span> <span class="nt">-d</span> <span class="s2">"</span><span class="nv">$HOME</span><span class="s2">/.rbenv/"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then
    </span><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="s2">"</span><span class="nv">$HOME</span><span class="s2">/.rbenv/bin:</span><span class="nv">$PATH</span><span class="s2">"</span>
    <span class="nb">eval</span> <span class="s2">"</span><span class="si">$(</span>rbenv init - bash<span class="si">)</span><span class="s2">"</span>
<span class="k">fi</span>
</code></pre></div></div> <p>Reinicie seu terminal ou execute <code class="language-plaintext highlighter-rouge">. ~/.bashrc</code> para recarregar suas configurações do bash. Isso tornará o comando <code class="language-plaintext highlighter-rouge">rbenv</code> disponível no terminal. Para testar se está funcionando corretamente, execute <code class="language-plaintext highlighter-rouge">curl -fsSL https://github.com/rbenv/rbenv-installer/raw/main/bin/rbenv-doctor | bash</code>. Ele deve produzir algo semelhante a isso:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Checking for `rbenv' in PATH: /home/gca/.rbenv/bin/rbenv
Checking for rbenv shims in PATH: Not found
Checking `rbenv install' support: /home/gca/.rbenv/plugins/ruby-build/bin/rbenv-install (ruby-build 20220910.1-10-gecb9d22)
Counting installed Ruby versions: 1 versions
Auditing installed plugins: OK
</code></pre></div></div> <p>Vai aparecer um erro na linha <code class="language-plaintext highlighter-rouge">Checking for rbenv shims in PATH</code>. Não se preocupe, isso vai ser corrigido. Em seguida, você precisa instalar o <a href="https://github.com/rbenv/ruby-build">ruby-build</a> como um plugin do <code class="language-plaintext highlighter-rouge">rbenv</code>, para que você possa facilmente baixar e instalar diferentes versões do Ruby. Para isso, execute os seguintes comandos:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">mkdir</span> <span class="nt">-p</span> <span class="s2">"</span><span class="si">$(</span>rbenv root<span class="si">)</span><span class="s2">"</span>/plugins
git clone https://github.com/rbenv/ruby-build.git <span class="s2">"</span><span class="si">$(</span>rbenv root<span class="si">)</span><span class="s2">"</span>/plugins/ruby-build
</code></pre></div></div> <p>Para verificar quais versões do Ruby estão disponíveis para instalação, basta executar <code class="language-plaintext highlighter-rouge">rbenv install --list</code>. Você pode instalar qualquer versão que desejar, mas recomendo instalar a versão estável mais recente. No momento é a versão 3.1.2. Para instalá-la, você precisa primeiro instalar a dependência ssl e depois a versão do Ruby.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt <span class="nb">install</span> <span class="nt">-y</span> libssl-dev
rbenv <span class="nb">install </span>3.1.2
</code></pre></div></div> <h2 id="instalando-as-dependências-do-al-folio">Instalando as dependências do al-folio</h2> <p>Agora que você tem o Ruby instalado, você pode instalar as dependências do al-folio. Primeiro, clone o repositório al-folio em sua máquina local. Em seguida, entre no diretório do repositório e crie um ambiente Ruby local com a versão do Ruby instalada. Em seguida, instale o pacote <code class="language-plaintext highlighter-rouge">bundle</code>, para que ele se encarregue de instalar o restante das dependências. Para fazer tudo isso, execute os seguintes comandos:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone ~/git@github.com:alshedivat/al-folio.git
<span class="nb">cd</span> ~/al-folio
rbenv <span class="nb">local </span>3.1.2
gem <span class="nb">install </span>bundle
bundle <span class="nb">install</span>
</code></pre></div></div> <p>Também é necessário instalar o pacote <code class="language-plaintext highlighter-rouge">jupyter</code>, já que o al-folio suporta <code class="language-plaintext highlighter-rouge">jupyter</code> notebooks. Se você não planeja usar notebooks com tanta frequência, pode instalar via <a href="https://github.com/pypa/pipx">pipx</a>. Para instalar o <code class="language-plaintext highlighter-rouge">pipx</code> e o <code class="language-plaintext highlighter-rouge">jupyter</code>, execute os seguintes comandos:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># também é possível instalar via apt com o comando `sudo apt install -y pipx`</span>
python3 <span class="nt">-m</span> pip <span class="nb">install</span> <span class="nt">--user</span> pipx
pipx <span class="nb">install </span>jupyter
</code></pre></div></div> <h2 id="executando-o-al-folio-localmente">Executando o al-folio localmente</h2> <p>Agora você pode executar o site localmente. Tudo o que você precisa fazer é abrir o diretório do al-folio e executar o Jekyll:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bundle <span class="nb">exec </span>jekyll serve <span class="nt">--lsi</span>
</code></pre></div></div> <p>Boa programação!</p>]]></content><author><name></name></author><category term="website"/><category term="development"/><category term="al-folio"/><category term="website"/><category term="jekyll"/><category term="local"/><summary type="html"><![CDATA[Passo a passo sobre como executar seu próprio al-folio localmente.]]></summary></entry></feed>